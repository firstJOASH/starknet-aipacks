{"version":3,"file":"index.esm.js","sources":["../../posthog-core/src/types.ts","../../posthog-core/src/utils.ts","../../posthog-core/src/lz-string.ts","../../posthog-core/src/eventemitter.ts","../../posthog-core/src/vendor/uuidv7.ts","../../posthog-core/src/index.ts","../src/context.ts","../src/storage.ts","../src/posthog-web.ts"],"sourcesContent":["export type PostHogCoreOptions = {\n  /** PostHog API host, usually 'https://us.i.posthog.com' or 'https://eu.i.posthog.com' */\n  host?: string\n  /** The number of events to queue before sending to PostHog (flushing) */\n  flushAt?: number\n  /** The interval in milliseconds between periodic flushes */\n  flushInterval?: number\n  /** The maximum number of queued messages to be flushed as part of a single batch (must be higher than `flushAt`) */\n  maxBatchSize?: number\n  /** The maximum number of cached messages either in memory or on the local storage.\n   * Defaults to 1000, (must be higher than `flushAt`)\n   */\n  maxQueueSize?: number\n  /** If set to true the SDK is essentially disabled (useful for local environments where you don't want to track anything) */\n  disabled?: boolean\n  /** If set to false the SDK will not track until the `optIn` function is called. */\n  defaultOptIn?: boolean\n  /** Whether to track that `getFeatureFlag` was called (used by Experiments) */\n  sendFeatureFlagEvent?: boolean\n  /** Whether to load feature flags when initialized or not */\n  preloadFeatureFlags?: boolean\n  /** Option to bootstrap the library with given distinctId and feature flags */\n  bootstrap?: {\n    distinctId?: string\n    isIdentifiedId?: boolean\n    featureFlags?: Record<string, boolean | string>\n    featureFlagPayloads?: Record<string, JsonType>\n  }\n  /** How many times we will retry HTTP requests. Defaults to 3. */\n  fetchRetryCount?: number\n  /** The delay between HTTP request retries, Defaults to 3 seconds. */\n  fetchRetryDelay?: number\n  /** Timeout in milliseconds for any calls. Defaults to 10 seconds. */\n  requestTimeout?: number\n  /** Timeout in milliseconds for feature flag calls. Defaults to 10 seconds for stateful clients, and 3 seconds for stateless. */\n  featureFlagsRequestTimeoutMs?: number\n  /** For Session Analysis how long before we expire a session (defaults to 30 mins) */\n  sessionExpirationTimeSeconds?: number\n  /** Whether to post events to PostHog in JSON or compressed format. Defaults to 'json' */\n  captureMode?: 'json' | 'form'\n  disableGeoip?: boolean\n  /** Special flag to indicate ingested data is for a historical migration. */\n  historicalMigration?: boolean\n}\n\nexport enum PostHogPersistedProperty {\n  AnonymousId = 'anonymous_id',\n  DistinctId = 'distinct_id',\n  Props = 'props',\n  FeatureFlags = 'feature_flags',\n  FeatureFlagPayloads = 'feature_flag_payloads',\n  BootstrapFeatureFlags = 'bootstrap_feature_flags',\n  BootstrapFeatureFlagPayloads = 'bootstrap_feature_flag_payloads',\n  OverrideFeatureFlags = 'override_feature_flags',\n  Queue = 'queue',\n  OptedOut = 'opted_out',\n  SessionId = 'session_id',\n  SessionLastTimestamp = 'session_timestamp',\n  PersonProperties = 'person_properties',\n  GroupProperties = 'group_properties',\n  InstalledAppBuild = 'installed_app_build', // only used by posthog-react-native\n  InstalledAppVersion = 'installed_app_version', // only used by posthog-react-native\n  SessionReplay = 'session_replay', // only used by posthog-react-native\n  DecideEndpointWasHit = 'decide_endpoint_was_hit', // only used by posthog-react-native\n}\n\nexport type PostHogFetchOptions = {\n  method: 'GET' | 'POST' | 'PUT' | 'PATCH'\n  mode?: 'no-cors'\n  credentials?: 'omit'\n  headers: { [key: string]: string }\n  body?: string\n  signal?: AbortSignal\n}\n\n// Check out posthog-js for these additional options and try to keep them in sync\nexport type PostHogCaptureOptions = {\n  /** If provided overrides the auto-generated event ID */\n  uuid?: string\n  /** If provided overrides the auto-generated timestamp */\n  timestamp?: Date\n  disableGeoip?: boolean\n}\n\nexport type PostHogFetchResponse = {\n  status: number\n  text: () => Promise<string>\n  json: () => Promise<any>\n}\n\nexport type PostHogQueueItem = {\n  message: any\n  callback?: (err: any) => void\n}\n\nexport type PostHogEventProperties = {\n  [key: string]: any\n}\n\nexport type PostHogAutocaptureElement = {\n  $el_text?: string\n  tag_name: string\n  href?: string\n  nth_child?: number\n  nth_of_type?: number\n  order?: number\n} & {\n  [key: string]: any\n} // Any key prefixed with `attr__` can be added\n\nexport type PostHogDecideResponse = {\n  config: { enable_collect_everything: boolean }\n  editorParams: { toolbarVersion: string; jsURL: string }\n  isAuthenticated: true\n  supportedCompression: string[]\n  featureFlags: {\n    [key: string]: string | boolean\n  }\n  featureFlagPayloads: {\n    [key: string]: JsonType\n  }\n  errorsWhileComputingFlags: boolean\n  sessionRecording?:\n    | boolean\n    | {\n        [key: string]: JsonType\n      }\n}\n\nexport type PostHogFlagsAndPayloadsResponse = {\n  featureFlags: PostHogDecideResponse['featureFlags']\n  featureFlagPayloads: PostHogDecideResponse['featureFlagPayloads']\n}\n\nexport type JsonType = string | number | boolean | null | { [key: string]: JsonType } | Array<JsonType>\n\nexport type FetchLike = (url: string, options: PostHogFetchOptions) => Promise<PostHogFetchResponse>\n","import { FetchLike } from './types'\n\nexport function assert(truthyValue: any, message: string): void {\n  if (!truthyValue) {\n    throw new Error(message)\n  }\n}\n\nexport function removeTrailingSlash(url: string): string {\n  return url?.replace(/\\/+$/, '')\n}\n\nexport interface RetriableOptions {\n  retryCount: number\n  retryDelay: number\n  retryCheck: (err: any) => boolean\n}\n\nexport async function retriable<T>(fn: () => Promise<T>, props: RetriableOptions): Promise<T> {\n  let lastError = null\n\n  for (let i = 0; i < props.retryCount + 1; i++) {\n    if (i > 0) {\n      // don't wait when it's the last try\n      await new Promise((r) => setTimeout(r, props.retryDelay))\n    }\n\n    try {\n      const res = await fn()\n      return res\n    } catch (e) {\n      lastError = e\n      if (!props.retryCheck(e)) {\n        throw e\n      }\n    }\n  }\n\n  throw lastError\n}\n\nexport function currentTimestamp(): number {\n  return new Date().getTime()\n}\n\nexport function currentISOTime(): string {\n  return new Date().toISOString()\n}\n\nexport function safeSetTimeout(fn: () => void, timeout: number): any {\n  // NOTE: we use this so rarely that it is totally fine to do `safeSetTimeout(fn, 0)``\n  // rather than setImmediate.\n  const t = setTimeout(fn, timeout) as any\n  // We unref if available to prevent Node.js hanging on exit\n  t?.unref && t?.unref()\n  return t\n}\n\n// NOTE: We opt for this slightly imperfect check as the global \"Promise\" object can get mutated in certain environments\nexport const isPromise = (obj: any): obj is Promise<any> => {\n  return obj && typeof obj.then === 'function'\n}\n\nexport function getFetch(): FetchLike | undefined {\n  return typeof fetch !== 'undefined' ? fetch : typeof global.fetch !== 'undefined' ? global.fetch : undefined\n}\n","// Copyright (c) 2013 Pieroxy <pieroxy@pieroxy.net>\n// This work is free. You can redistribute it and/or modify it\n// under the terms of the WTFPL, Version 2\n// For more information see LICENSE.txt or http://www.wtfpl.net/\n//\n// For more information, the home page:\n// http://pieroxy.net/blog/pages/lz-string/testing.html\n//\n// LZ-based compression algorithm, version 1.4.4\n\n// private property\nconst f = String.fromCharCode\nconst keyStrBase64 = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\nconst baseReverseDic: any = {}\n\nfunction getBaseValue(alphabet: any, character: any): any {\n  if (!baseReverseDic[alphabet]) {\n    baseReverseDic[alphabet] = {}\n    for (let i = 0; i < alphabet.length; i++) {\n      baseReverseDic[alphabet][alphabet.charAt(i)] = i\n    }\n  }\n  return baseReverseDic[alphabet][character]\n}\n\nexport const LZString = {\n  compressToBase64: function (input: any): string {\n    if (input == null) {\n      return ''\n    }\n    const res = LZString._compress(input, 6, function (a: any) {\n      return keyStrBase64.charAt(a)\n    })\n    switch (\n      res.length % 4 // To produce valid Base64\n    ) {\n      default: // When could this happen ?\n      case 0:\n        return res\n      case 1:\n        return res + '==='\n      case 2:\n        return res + '=='\n      case 3:\n        return res + '='\n    }\n  },\n\n  decompressFromBase64: function (input: any): any {\n    if (input == null) {\n      return ''\n    }\n    if (input == '') {\n      return null\n    }\n    return LZString._decompress(input.length, 32, function (index: any) {\n      return getBaseValue(keyStrBase64, input.charAt(index))\n    })\n  },\n\n  compress: function (uncompressed: any): any {\n    return LZString._compress(uncompressed, 16, function (a: any) {\n      return f(a)\n    })\n  },\n  _compress: function (uncompressed: any, bitsPerChar: any, getCharFromInt: any): any {\n    if (uncompressed == null) {\n      return ''\n    }\n    const context_dictionary: any = {},\n      context_dictionaryToCreate: any = {},\n      context_data = []\n\n    let i,\n      value,\n      context_c = '',\n      context_wc = '',\n      context_w = '',\n      context_enlargeIn = 2, // Compensate for the first entry which should not count\n      context_dictSize = 3,\n      context_numBits = 2,\n      context_data_val = 0,\n      context_data_position = 0,\n      ii\n\n    for (ii = 0; ii < uncompressed.length; ii += 1) {\n      context_c = uncompressed.charAt(ii)\n      if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {\n        context_dictionary[context_c] = context_dictSize++\n        context_dictionaryToCreate[context_c] = true\n      }\n\n      context_wc = context_w + context_c\n      if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) {\n        context_w = context_wc\n      } else {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n          if (context_w.charCodeAt(0) < 256) {\n            for (i = 0; i < context_numBits; i++) {\n              context_data_val = context_data_val << 1\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n            }\n            value = context_w.charCodeAt(0)\n            for (i = 0; i < 8; i++) {\n              context_data_val = (context_data_val << 1) | (value & 1)\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n              value = value >> 1\n            }\n          } else {\n            value = 1\n            for (i = 0; i < context_numBits; i++) {\n              context_data_val = (context_data_val << 1) | value\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n              value = 0\n            }\n            value = context_w.charCodeAt(0)\n            for (i = 0; i < 16; i++) {\n              context_data_val = (context_data_val << 1) | (value & 1)\n              if (context_data_position == bitsPerChar - 1) {\n                context_data_position = 0\n                context_data.push(getCharFromInt(context_data_val))\n                context_data_val = 0\n              } else {\n                context_data_position++\n              }\n              value = value >> 1\n            }\n          }\n          context_enlargeIn--\n          if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits)\n            context_numBits++\n          }\n          delete context_dictionaryToCreate[context_w]\n        } else {\n          value = context_dictionary[context_w]\n          for (i = 0; i < context_numBits; i++) {\n            context_data_val = (context_data_val << 1) | (value & 1)\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = value >> 1\n          }\n        }\n        context_enlargeIn--\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits)\n          context_numBits++\n        }\n        // Add wc to the dictionary.\n        context_dictionary[context_wc] = context_dictSize++\n        context_w = String(context_c)\n      }\n    }\n\n    // Output the code for w.\n    if (context_w !== '') {\n      if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n        if (context_w.charCodeAt(0) < 256) {\n          for (i = 0; i < context_numBits; i++) {\n            context_data_val = context_data_val << 1\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n          }\n          value = context_w.charCodeAt(0)\n          for (i = 0; i < 8; i++) {\n            context_data_val = (context_data_val << 1) | (value & 1)\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = value >> 1\n          }\n        } else {\n          value = 1\n          for (i = 0; i < context_numBits; i++) {\n            context_data_val = (context_data_val << 1) | value\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = 0\n          }\n          value = context_w.charCodeAt(0)\n          for (i = 0; i < 16; i++) {\n            context_data_val = (context_data_val << 1) | (value & 1)\n            if (context_data_position == bitsPerChar - 1) {\n              context_data_position = 0\n              context_data.push(getCharFromInt(context_data_val))\n              context_data_val = 0\n            } else {\n              context_data_position++\n            }\n            value = value >> 1\n          }\n        }\n        context_enlargeIn--\n        if (context_enlargeIn == 0) {\n          context_enlargeIn = Math.pow(2, context_numBits)\n          context_numBits++\n        }\n        delete context_dictionaryToCreate[context_w]\n      } else {\n        value = context_dictionary[context_w]\n        for (i = 0; i < context_numBits; i++) {\n          context_data_val = (context_data_val << 1) | (value & 1)\n          if (context_data_position == bitsPerChar - 1) {\n            context_data_position = 0\n            context_data.push(getCharFromInt(context_data_val))\n            context_data_val = 0\n          } else {\n            context_data_position++\n          }\n          value = value >> 1\n        }\n      }\n      context_enlargeIn--\n      if (context_enlargeIn == 0) {\n        context_enlargeIn = Math.pow(2, context_numBits)\n        context_numBits++\n      }\n    }\n\n    // Mark the end of the stream\n    value = 2\n    for (i = 0; i < context_numBits; i++) {\n      context_data_val = (context_data_val << 1) | (value & 1)\n      if (context_data_position == bitsPerChar - 1) {\n        context_data_position = 0\n        context_data.push(getCharFromInt(context_data_val))\n        context_data_val = 0\n      } else {\n        context_data_position++\n      }\n      value = value >> 1\n    }\n\n    // Flush the last char\n    while (true) {\n      context_data_val = context_data_val << 1\n      if (context_data_position == bitsPerChar - 1) {\n        context_data.push(getCharFromInt(context_data_val))\n        break\n      } else {\n        context_data_position++\n      }\n    }\n    return context_data.join('')\n  },\n\n  decompress: function (compressed: any): any {\n    if (compressed == null) {\n      return ''\n    }\n    if (compressed == '') {\n      return null\n    }\n    return LZString._decompress(compressed.length, 32768, function (index: any) {\n      return compressed.charCodeAt(index)\n    })\n  },\n\n  _decompress: function (length: any, resetValue: any, getNextValue: any): any {\n    const dictionary = [],\n      result = [],\n      data = { val: getNextValue(0), position: resetValue, index: 1 }\n\n    let next,\n      enlargeIn = 4,\n      dictSize = 4,\n      numBits = 3,\n      entry: any = '',\n      i,\n      w,\n      bits,\n      resb,\n      maxpower,\n      power,\n      c\n\n    for (i = 0; i < 3; i += 1) {\n      dictionary[i] = i\n    }\n\n    bits = 0\n    maxpower = Math.pow(2, 2)\n    power = 1\n    while (power != maxpower) {\n      resb = data.val & data.position\n      data.position >>= 1\n      if (data.position == 0) {\n        data.position = resetValue\n        data.val = getNextValue(data.index++)\n      }\n      bits |= (resb > 0 ? 1 : 0) * power\n      power <<= 1\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    switch ((next = bits)) {\n      case 0:\n        bits = 0\n        maxpower = Math.pow(2, 8)\n        power = 1\n        while (power != maxpower) {\n          resb = data.val & data.position\n          data.position >>= 1\n          if (data.position == 0) {\n            data.position = resetValue\n            data.val = getNextValue(data.index++)\n          }\n          bits |= (resb > 0 ? 1 : 0) * power\n          power <<= 1\n        }\n        c = f(bits)\n        break\n      case 1:\n        bits = 0\n        maxpower = Math.pow(2, 16)\n        power = 1\n        while (power != maxpower) {\n          resb = data.val & data.position\n          data.position >>= 1\n          if (data.position == 0) {\n            data.position = resetValue\n            data.val = getNextValue(data.index++)\n          }\n          bits |= (resb > 0 ? 1 : 0) * power\n          power <<= 1\n        }\n        c = f(bits)\n        break\n      case 2:\n        return ''\n    }\n    dictionary[3] = c\n    w = c\n    result.push(c)\n    while (true) {\n      if (data.index > length) {\n        return ''\n      }\n\n      bits = 0\n      maxpower = Math.pow(2, numBits)\n      power = 1\n      while (power != maxpower) {\n        resb = data.val & data.position\n        data.position >>= 1\n        if (data.position == 0) {\n          data.position = resetValue\n          data.val = getNextValue(data.index++)\n        }\n        bits |= (resb > 0 ? 1 : 0) * power\n        power <<= 1\n      }\n\n      switch ((c = bits)) {\n        case 0:\n          bits = 0\n          maxpower = Math.pow(2, 8)\n          power = 1\n          while (power != maxpower) {\n            resb = data.val & data.position\n            data.position >>= 1\n            if (data.position == 0) {\n              data.position = resetValue\n              data.val = getNextValue(data.index++)\n            }\n            bits |= (resb > 0 ? 1 : 0) * power\n            power <<= 1\n          }\n\n          dictionary[dictSize++] = f(bits)\n          c = dictSize - 1\n          enlargeIn--\n          break\n        case 1:\n          bits = 0\n          maxpower = Math.pow(2, 16)\n          power = 1\n          while (power != maxpower) {\n            resb = data.val & data.position\n            data.position >>= 1\n            if (data.position == 0) {\n              data.position = resetValue\n              data.val = getNextValue(data.index++)\n            }\n            bits |= (resb > 0 ? 1 : 0) * power\n            power <<= 1\n          }\n          dictionary[dictSize++] = f(bits)\n          c = dictSize - 1\n          enlargeIn--\n          break\n        case 2:\n          return result.join('')\n      }\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits)\n        numBits++\n      }\n\n      if (dictionary[c]) {\n        entry = dictionary[c]\n      } else {\n        if (c === dictSize) {\n          entry = w + w.charAt(0)\n        } else {\n          return null\n        }\n      }\n      result.push(entry)\n\n      // Add w+entry[0] to the dictionary.\n      dictionary[dictSize++] = w + entry.charAt(0)\n      enlargeIn--\n\n      w = entry\n\n      if (enlargeIn == 0) {\n        enlargeIn = Math.pow(2, numBits)\n        numBits++\n      }\n    }\n  },\n}\n","export class SimpleEventEmitter {\n  events: { [key: string]: ((...args: any[]) => void)[] } = {}\n\n  constructor() {\n    this.events = {}\n  }\n\n  on(event: string, listener: (...args: any[]) => void): () => void {\n    if (!this.events[event]) {\n      this.events[event] = []\n    }\n    this.events[event].push(listener)\n\n    return () => {\n      this.events[event] = this.events[event].filter((x) => x !== listener)\n    }\n  }\n\n  emit(event: string, payload: any): void {\n    for (const listener of this.events[event] || []) {\n      listener(payload)\n    }\n    for (const listener of this.events['*'] || []) {\n      listener(event, payload)\n    }\n  }\n}\n","// vendor from: https://github.com/LiosK/uuidv7/blob/f30b7a7faff73afbce0b27a46c638310f96912ba/src/index.ts\n// https://github.com/LiosK/uuidv7#license\n\n/**\n * uuidv7: An experimental implementation of the proposed UUID Version 7\n *\n * @license Apache-2.0\n * @copyright 2021-2023 LiosK\n * @packageDocumentation\n */\n\nconst DIGITS = \"0123456789abcdef\";\n\n/** Represents a UUID as a 16-byte byte array. */\nexport class UUID {\n  /** @param bytes - The 16-byte byte array representation. */\n  private constructor(readonly bytes: Readonly<Uint8Array>) {}\n\n  /**\n   * Creates an object from the internal representation, a 16-byte byte array\n   * containing the binary UUID representation in the big-endian byte order.\n   *\n   * This method does NOT shallow-copy the argument, and thus the created object\n   * holds the reference to the underlying buffer.\n   *\n   * @throws TypeError if the length of the argument is not 16.\n   */\n  static ofInner(bytes: Readonly<Uint8Array>): UUID {\n    if (bytes.length !== 16) {\n      throw new TypeError(\"not 128-bit length\");\n    } else {\n      return new UUID(bytes);\n    }\n  }\n\n  /**\n   * Builds a byte array from UUIDv7 field values.\n   *\n   * @param unixTsMs - A 48-bit `unix_ts_ms` field value.\n   * @param randA - A 12-bit `rand_a` field value.\n   * @param randBHi - The higher 30 bits of 62-bit `rand_b` field value.\n   * @param randBLo - The lower 32 bits of 62-bit `rand_b` field value.\n   * @throws RangeError if any field value is out of the specified range.\n   */\n  static fromFieldsV7(\n    unixTsMs: number,\n    randA: number,\n    randBHi: number,\n    randBLo: number,\n  ): UUID {\n    if (\n      !Number.isInteger(unixTsMs) ||\n      !Number.isInteger(randA) ||\n      !Number.isInteger(randBHi) ||\n      !Number.isInteger(randBLo) ||\n      unixTsMs < 0 ||\n      randA < 0 ||\n      randBHi < 0 ||\n      randBLo < 0 ||\n      unixTsMs > 0xffff_ffff_ffff ||\n      randA > 0xfff ||\n      randBHi > 0x3fff_ffff ||\n      randBLo > 0xffff_ffff\n    ) {\n      throw new RangeError(\"invalid field value\");\n    }\n\n    const bytes = new Uint8Array(16);\n    bytes[0] = unixTsMs / 2 ** 40;\n    bytes[1] = unixTsMs / 2 ** 32;\n    bytes[2] = unixTsMs / 2 ** 24;\n    bytes[3] = unixTsMs / 2 ** 16;\n    bytes[4] = unixTsMs / 2 ** 8;\n    bytes[5] = unixTsMs;\n    bytes[6] = 0x70 | (randA >>> 8);\n    bytes[7] = randA;\n    bytes[8] = 0x80 | (randBHi >>> 24);\n    bytes[9] = randBHi >>> 16;\n    bytes[10] = randBHi >>> 8;\n    bytes[11] = randBHi;\n    bytes[12] = randBLo >>> 24;\n    bytes[13] = randBLo >>> 16;\n    bytes[14] = randBLo >>> 8;\n    bytes[15] = randBLo;\n    return new UUID(bytes);\n  }\n\n  /**\n   * Builds a byte array from a string representation.\n   *\n   * This method accepts the following formats:\n   *\n   * - 32-digit hexadecimal format without hyphens: `0189dcd553117d408db09496a2eef37b`\n   * - 8-4-4-4-12 hyphenated format: `0189dcd5-5311-7d40-8db0-9496a2eef37b`\n   * - Hyphenated format with surrounding braces: `{0189dcd5-5311-7d40-8db0-9496a2eef37b}`\n   * - RFC 4122 URN format: `urn:uuid:0189dcd5-5311-7d40-8db0-9496a2eef37b`\n   *\n   * Leading and trailing whitespaces represents an error.\n   *\n   * @throws SyntaxError if the argument could not parse as a valid UUID string.\n   */\n  static parse(uuid: string): UUID {\n    let hex: string | undefined = undefined;\n    switch (uuid.length) {\n      case 32:\n        hex = /^[0-9a-f]{32}$/i.exec(uuid)?.[0];\n        break;\n      case 36:\n        hex =\n          /^([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/i\n            .exec(uuid)\n            ?.slice(1, 6)\n            .join(\"\");\n        break;\n      case 38:\n        hex =\n          /^\\{([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})\\}$/i\n            .exec(uuid)\n            ?.slice(1, 6)\n            .join(\"\");\n        break;\n      case 45:\n        hex =\n          /^urn:uuid:([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{12})$/i\n            .exec(uuid)\n            ?.slice(1, 6)\n            .join(\"\");\n        break;\n      default:\n        break;\n    }\n\n    if (hex) {\n      const inner = new Uint8Array(16);\n      for (let i = 0; i < 16; i += 4) {\n        const n = parseInt(hex.substring(2 * i, 2 * i + 8), 16);\n        inner[i + 0] = n >>> 24;\n        inner[i + 1] = n >>> 16;\n        inner[i + 2] = n >>> 8;\n        inner[i + 3] = n;\n      }\n      return new UUID(inner);\n    } else {\n      throw new SyntaxError(\"could not parse UUID string\");\n    }\n  }\n\n  /**\n   * @returns The 8-4-4-4-12 canonical hexadecimal string representation\n   * (`0189dcd5-5311-7d40-8db0-9496a2eef37b`).\n   */\n  toString(): string {\n    let text = \"\";\n    for (let i = 0; i < this.bytes.length; i++) {\n      text += DIGITS.charAt(this.bytes[i] >>> 4);\n      text += DIGITS.charAt(this.bytes[i] & 0xf);\n      if (i === 3 || i === 5 || i === 7 || i === 9) {\n        text += \"-\";\n      }\n    }\n    return text;\n  }\n\n  /**\n   * @returns The 32-digit hexadecimal representation without hyphens\n   * (`0189dcd553117d408db09496a2eef37b`).\n   */\n  toHex(): string {\n    let text = \"\";\n    for (let i = 0; i < this.bytes.length; i++) {\n      text += DIGITS.charAt(this.bytes[i] >>> 4);\n      text += DIGITS.charAt(this.bytes[i] & 0xf);\n    }\n    return text;\n  }\n\n  /** @returns The 8-4-4-4-12 canonical hexadecimal string representation. */\n  toJSON(): string {\n    return this.toString();\n  }\n\n  /**\n   * Reports the variant field value of the UUID or, if appropriate, \"NIL\" or\n   * \"MAX\".\n   *\n   * For convenience, this method reports \"NIL\" or \"MAX\" if `this` represents\n   * the Nil or Max UUID, although the Nil and Max UUIDs are technically\n   * subsumed under the variants `0b0` and `0b111`, respectively.\n   */\n  getVariant():\n    | \"VAR_0\"\n    | \"VAR_10\"\n    | \"VAR_110\"\n    | \"VAR_RESERVED\"\n    | \"NIL\"\n    | \"MAX\" {\n    const n = this.bytes[8] >>> 4;\n    if (n < 0) {\n      throw new Error(\"unreachable\");\n    } else if (n <= 0b0111) {\n      return this.bytes.every((e) => e === 0) ? \"NIL\" : \"VAR_0\";\n    } else if (n <= 0b1011) {\n      return \"VAR_10\";\n    } else if (n <= 0b1101) {\n      return \"VAR_110\";\n    } else if (n <= 0b1111) {\n      return this.bytes.every((e) => e === 0xff) ? \"MAX\" : \"VAR_RESERVED\";\n    } else {\n      throw new Error(\"unreachable\");\n    }\n  }\n\n  /**\n   * Returns the version field value of the UUID or `undefined` if the UUID does\n   * not have the variant field value of `0b10`.\n   */\n  getVersion(): number | undefined {\n    return this.getVariant() === \"VAR_10\" ? this.bytes[6] >>> 4 : undefined;\n  }\n\n  /** Creates an object from `this`. */\n  clone(): UUID {\n    return new UUID(this.bytes.slice(0));\n  }\n\n  /** Returns true if `this` is equivalent to `other`. */\n  equals(other: UUID): boolean {\n    return this.compareTo(other) === 0;\n  }\n\n  /**\n   * Returns a negative integer, zero, or positive integer if `this` is less\n   * than, equal to, or greater than `other`, respectively.\n   */\n  compareTo(other: UUID): number {\n    for (let i = 0; i < 16; i++) {\n      const diff = this.bytes[i] - other.bytes[i];\n      if (diff !== 0) {\n        return Math.sign(diff);\n      }\n    }\n    return 0;\n  }\n}\n\n/**\n * Encapsulates the monotonic counter state.\n *\n * This class provides APIs to utilize a separate counter state from that of the\n * global generator used by {@link uuidv7} and {@link uuidv7obj}. In addition to\n * the default {@link generate} method, this class has {@link generateOrAbort}\n * that is useful to absolutely guarantee the monotonically increasing order of\n * generated UUIDs. See their respective documentation for details.\n */\nexport class V7Generator {\n  private timestamp = 0;\n  private counter = 0;\n\n  /** The random number generator used by the generator. */\n  private readonly random: { nextUint32(): number };\n\n  /**\n   * Creates a generator object with the default random number generator, or\n   * with the specified one if passed as an argument. The specified random\n   * number generator should be cryptographically strong and securely seeded.\n   */\n  constructor(randomNumberGenerator?: {\n    /** Returns a 32-bit random unsigned integer. */\n    nextUint32(): number;\n  }) {\n    this.random = randomNumberGenerator ?? getDefaultRandom();\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the current timestamp, or resets the\n   * generator upon significant timestamp rollback.\n   *\n   * This method returns a monotonically increasing UUID by reusing the previous\n   * timestamp even if the up-to-date timestamp is smaller than the immediately\n   * preceding UUID's. However, when such a clock rollback is considered\n   * significant (i.e., by more than ten seconds), this method resets the\n   * generator and returns a new UUID based on the given timestamp, breaking the\n   * increasing order of UUIDs.\n   *\n   * See {@link generateOrAbort} for the other mode of generation and\n   * {@link generateOrResetCore} for the low-level primitive.\n   */\n  generate(): UUID {\n    return this.generateOrResetCore(Date.now(), 10_000);\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the current timestamp, or returns\n   * `undefined` upon significant timestamp rollback.\n   *\n   * This method returns a monotonically increasing UUID by reusing the previous\n   * timestamp even if the up-to-date timestamp is smaller than the immediately\n   * preceding UUID's. However, when such a clock rollback is considered\n   * significant (i.e., by more than ten seconds), this method aborts and\n   * returns `undefined` immediately.\n   *\n   * See {@link generate} for the other mode of generation and\n   * {@link generateOrAbortCore} for the low-level primitive.\n   */\n  generateOrAbort(): UUID | undefined {\n    return this.generateOrAbortCore(Date.now(), 10_000);\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the `unixTsMs` passed, or resets the\n   * generator upon significant timestamp rollback.\n   *\n   * This method is equivalent to {@link generate} except that it takes a custom\n   * timestamp and clock rollback allowance.\n   *\n   * @param rollbackAllowance - The amount of `unixTsMs` rollback that is\n   * considered significant. A suggested value is `10_000` (milliseconds).\n   * @throws RangeError if `unixTsMs` is not a 48-bit positive integer.\n   */\n  generateOrResetCore(unixTsMs: number, rollbackAllowance: number): UUID {\n    let value = this.generateOrAbortCore(unixTsMs, rollbackAllowance);\n    if (value === undefined) {\n      // reset state and resume\n      this.timestamp = 0;\n      value = this.generateOrAbortCore(unixTsMs, rollbackAllowance)!;\n    }\n    return value;\n  }\n\n  /**\n   * Generates a new UUIDv7 object from the `unixTsMs` passed, or returns\n   * `undefined` upon significant timestamp rollback.\n   *\n   * This method is equivalent to {@link generateOrAbort} except that it takes a\n   * custom timestamp and clock rollback allowance.\n   *\n   * @param rollbackAllowance - The amount of `unixTsMs` rollback that is\n   * considered significant. A suggested value is `10_000` (milliseconds).\n   * @throws RangeError if `unixTsMs` is not a 48-bit positive integer.\n   */\n  generateOrAbortCore(\n    unixTsMs: number,\n    rollbackAllowance: number,\n  ): UUID | undefined {\n    const MAX_COUNTER = 0x3ff_ffff_ffff;\n\n    if (\n      !Number.isInteger(unixTsMs) ||\n      unixTsMs < 1 ||\n      unixTsMs > 0xffff_ffff_ffff\n    ) {\n      throw new RangeError(\"`unixTsMs` must be a 48-bit positive integer\");\n    } else if (rollbackAllowance < 0 || rollbackAllowance > 0xffff_ffff_ffff) {\n      throw new RangeError(\"`rollbackAllowance` out of reasonable range\");\n    }\n\n    if (unixTsMs > this.timestamp) {\n      this.timestamp = unixTsMs;\n      this.resetCounter();\n    } else if (unixTsMs + rollbackAllowance >= this.timestamp) {\n      // go on with previous timestamp if new one is not much smaller\n      this.counter++;\n      if (this.counter > MAX_COUNTER) {\n        // increment timestamp at counter overflow\n        this.timestamp++;\n        this.resetCounter();\n      }\n    } else {\n      // abort if clock went backwards to unbearable extent\n      return undefined;\n    }\n\n    return UUID.fromFieldsV7(\n      this.timestamp,\n      Math.trunc(this.counter / 2 ** 30),\n      this.counter & (2 ** 30 - 1),\n      this.random.nextUint32(),\n    );\n  }\n\n  /** Initializes the counter at a 42-bit random integer. */\n  private resetCounter(): void {\n    this.counter =\n      this.random.nextUint32() * 0x400 + (this.random.nextUint32() & 0x3ff);\n  }\n\n  /**\n   * Generates a new UUIDv4 object utilizing the random number generator inside.\n   *\n   * @internal\n   */\n  generateV4(): UUID {\n    const bytes = new Uint8Array(\n      Uint32Array.of(\n        this.random.nextUint32(),\n        this.random.nextUint32(),\n        this.random.nextUint32(),\n        this.random.nextUint32(),\n      ).buffer,\n    );\n    bytes[6] = 0x40 | (bytes[6] >>> 4);\n    bytes[8] = 0x80 | (bytes[8] >>> 2);\n    return UUID.ofInner(bytes);\n  }\n}\n\n/** A global flag to force use of cryptographically strong RNG. */\n// declare const UUIDV7_DENY_WEAK_RNG: boolean;\n\n/** Returns the default random number generator available in the environment. */\nconst getDefaultRandom = (): { nextUint32(): number } => {\n// fix: crypto isn't available in react-native, always use Math.random\n\n//   // detect Web Crypto API\n//   if (\n//     typeof crypto !== \"undefined\" &&\n//     typeof crypto.getRandomValues !== \"undefined\"\n//   ) {\n//     return new BufferedCryptoRandom();\n//   } else {\n//     // fall back on Math.random() unless the flag is set to true\n//     if (typeof UUIDV7_DENY_WEAK_RNG !== \"undefined\" && UUIDV7_DENY_WEAK_RNG) {\n//       throw new Error(\"no cryptographically strong RNG available\");\n//     }\n//     return {\n//       nextUint32: (): number =>\n//         Math.trunc(Math.random() * 0x1_0000) * 0x1_0000 +\n//         Math.trunc(Math.random() * 0x1_0000),\n//     };\n//   }\n  return {\n    nextUint32: (): number =>\n      Math.trunc(Math.random() * 0x1_0000) * 0x1_0000 +\n      Math.trunc(Math.random() * 0x1_0000),\n  };\n};\n\n// /**\n//  * Wraps `crypto.getRandomValues()` to enable buffering; this uses a small\n//  * buffer by default to avoid both unbearable throughput decline in some\n//  * environments and the waste of time and space for unused values.\n//  */\n// class BufferedCryptoRandom {\n//   private readonly buffer = new Uint32Array(8);\n//   private cursor = 0xffff;\n//   nextUint32(): number {\n//     if (this.cursor >= this.buffer.length) {\n//       crypto.getRandomValues(this.buffer);\n//       this.cursor = 0;\n//     }\n//     return this.buffer[this.cursor++];\n//   }\n// }\n\nlet defaultGenerator: V7Generator | undefined;\n\n/**\n * Generates a UUIDv7 string.\n *\n * @returns The 8-4-4-4-12 canonical hexadecimal string representation\n * (\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\").\n */\nexport const uuidv7 = (): string => uuidv7obj().toString();\n\n/** Generates a UUIDv7 object. */\nexport const uuidv7obj = (): UUID =>\n  (defaultGenerator || (defaultGenerator = new V7Generator())).generate();\n\n/**\n * Generates a UUIDv4 string.\n *\n * @returns The 8-4-4-4-12 canonical hexadecimal string representation\n * (\"xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx\").\n */\nexport const uuidv4 = (): string => uuidv4obj().toString();\n\n/** Generates a UUIDv4 object. */\nexport const uuidv4obj = (): UUID =>\n  (defaultGenerator || (defaultGenerator = new V7Generator())).generateV4();\n","import {\n  PostHogFetchOptions,\n  PostHogFetchResponse,\n  PostHogQueueItem,\n  PostHogAutocaptureElement,\n  PostHogDecideResponse,\n  PostHogCoreOptions,\n  PostHogEventProperties,\n  PostHogPersistedProperty,\n  PostHogCaptureOptions,\n  JsonType,\n} from './types'\nimport {\n  assert,\n  currentISOTime,\n  currentTimestamp,\n  removeTrailingSlash,\n  retriable,\n  RetriableOptions,\n  safeSetTimeout,\n} from './utils'\nexport * as utils from './utils'\nimport { LZString } from './lz-string'\nimport { SimpleEventEmitter } from './eventemitter'\nimport { uuidv7 } from './vendor/uuidv7'\n\nclass PostHogFetchHttpError extends Error {\n  name = 'PostHogFetchHttpError'\n\n  constructor(public response: PostHogFetchResponse) {\n    super('HTTP error while fetching PostHog: ' + response.status)\n  }\n}\n\nclass PostHogFetchNetworkError extends Error {\n  name = 'PostHogFetchNetworkError'\n\n  constructor(public error: unknown) {\n    // TRICKY: \"cause\" is a newer property but is just ignored otherwise. Cast to any to ignore the type issue.\n    // eslint-disable-next-line @typescript-eslint/prefer-ts-expect-error\n    // @ts-ignore\n    super('Network error while fetching PostHog', error instanceof Error ? { cause: error } : {})\n  }\n}\n\nfunction isPostHogFetchError(err: any): boolean {\n  return typeof err === 'object' && (err instanceof PostHogFetchHttpError || err instanceof PostHogFetchNetworkError)\n}\n\nexport abstract class PostHogCoreStateless {\n  // options\n  readonly apiKey: string\n  readonly host: string\n  readonly flushAt: number\n  private maxBatchSize: number\n  private maxQueueSize: number\n  private flushInterval: number\n  private flushPromise: Promise<any> | null = null\n  private requestTimeout: number\n  private featureFlagsRequestTimeoutMs: number\n  private captureMode: 'form' | 'json'\n  private removeDebugCallback?: () => void\n  private disableGeoip: boolean = true\n  private historicalMigration: boolean = false\n  protected disabled = false\n\n  private defaultOptIn: boolean = true\n  private pendingPromises: Record<string, Promise<any>> = {}\n\n  // internal\n  protected _events = new SimpleEventEmitter()\n  protected _flushTimer?: any\n  protected _retryOptions: RetriableOptions\n  protected _initPromise: Promise<void>\n  protected _isInitialized: boolean = false\n\n  // Abstract methods to be overridden by implementations\n  abstract fetch(url: string, options: PostHogFetchOptions): Promise<PostHogFetchResponse>\n  abstract getLibraryId(): string\n  abstract getLibraryVersion(): string\n  abstract getCustomUserAgent(): string | void\n\n  // This is our abstracted storage. Each implementation should handle its own\n  abstract getPersistedProperty<T>(key: PostHogPersistedProperty): T | undefined\n  abstract setPersistedProperty<T>(key: PostHogPersistedProperty, value: T | null): void\n\n  constructor(apiKey: string, options?: PostHogCoreOptions) {\n    assert(apiKey, \"You must pass your PostHog project's api key.\")\n\n    this.apiKey = apiKey\n    this.host = removeTrailingSlash(options?.host || 'https://us.i.posthog.com')\n    this.flushAt = options?.flushAt ? Math.max(options?.flushAt, 1) : 20\n    this.maxBatchSize = Math.max(this.flushAt, options?.maxBatchSize ?? 100)\n    this.maxQueueSize = Math.max(this.flushAt, options?.maxQueueSize ?? 1000)\n    this.flushInterval = options?.flushInterval ?? 10000\n    this.captureMode = options?.captureMode || 'json'\n\n    // If enable is explicitly set to false we override the optout\n    this.defaultOptIn = options?.defaultOptIn ?? true\n\n    this._retryOptions = {\n      retryCount: options?.fetchRetryCount ?? 3,\n      retryDelay: options?.fetchRetryDelay ?? 3000, // 3 seconds\n      retryCheck: isPostHogFetchError,\n    }\n    this.requestTimeout = options?.requestTimeout ?? 10000 // 10 seconds\n    this.featureFlagsRequestTimeoutMs = options?.featureFlagsRequestTimeoutMs ?? 3000 // 3 seconds\n    this.disableGeoip = options?.disableGeoip ?? true\n    this.disabled = options?.disabled ?? false\n    this.historicalMigration = options?.historicalMigration ?? false\n    // Init promise allows the derived class to block calls until it is ready\n    this._initPromise = Promise.resolve()\n    this._isInitialized = true\n  }\n\n  protected logMsgIfDebug(fn: () => void): void {\n    if (this.isDebug) {\n      fn()\n    }\n  }\n\n  protected wrap(fn: () => void): void {\n    if (this.disabled) {\n      this.logMsgIfDebug(() => console.warn('[PostHog] The client is disabled'))\n      return\n    }\n\n    if (this._isInitialized) {\n      // NOTE: We could also check for the \"opt in\" status here...\n      return fn()\n    }\n\n    this._initPromise.then(() => fn())\n  }\n\n  protected getCommonEventProperties(): any {\n    return {\n      $lib: this.getLibraryId(),\n      $lib_version: this.getLibraryVersion(),\n    }\n  }\n\n  public get optedOut(): boolean {\n    return this.getPersistedProperty(PostHogPersistedProperty.OptedOut) ?? !this.defaultOptIn\n  }\n\n  async optIn(): Promise<void> {\n    this.wrap(() => {\n      this.setPersistedProperty(PostHogPersistedProperty.OptedOut, false)\n    })\n  }\n\n  async optOut(): Promise<void> {\n    this.wrap(() => {\n      this.setPersistedProperty(PostHogPersistedProperty.OptedOut, true)\n    })\n  }\n\n  on(event: string, cb: (...args: any[]) => void): () => void {\n    return this._events.on(event, cb)\n  }\n\n  debug(enabled: boolean = true): void {\n    this.removeDebugCallback?.()\n\n    if (enabled) {\n      const removeDebugCallback = this.on('*', (event, payload) => console.log('PostHog Debug', event, payload))\n      this.removeDebugCallback = () => {\n        removeDebugCallback()\n        this.removeDebugCallback = undefined\n      }\n    }\n  }\n\n  get isDebug(): boolean {\n    return !!this.removeDebugCallback\n  }\n\n  get isDisabled(): boolean {\n    return this.disabled\n  }\n\n  private buildPayload(payload: { distinct_id: string; event: string; properties?: PostHogEventProperties }): any {\n    return {\n      distinct_id: payload.distinct_id,\n      event: payload.event,\n      properties: {\n        ...(payload.properties || {}),\n        ...this.getCommonEventProperties(), // Common PH props\n      },\n    }\n  }\n\n  protected addPendingPromise<T>(promise: Promise<T>): Promise<T> {\n    const promiseUUID = uuidv7()\n    this.pendingPromises[promiseUUID] = promise\n    promise\n      .catch(() => {})\n      .finally(() => {\n        delete this.pendingPromises[promiseUUID]\n      })\n\n    return promise\n  }\n\n  /***\n   *** TRACKING\n   ***/\n  protected identifyStateless(\n    distinctId: string,\n    properties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      // The properties passed to identifyStateless are event properties.\n      // To add person properties, pass in all person properties to the `$set` and `$set_once` keys.\n\n      const payload = {\n        ...this.buildPayload({\n          distinct_id: distinctId,\n          event: '$identify',\n          properties,\n        }),\n      }\n\n      this.enqueue('identify', payload, options)\n    })\n  }\n\n  protected captureStateless(\n    distinctId: string,\n    event: string,\n    properties?: { [key: string]: any },\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const payload = this.buildPayload({ distinct_id: distinctId, event, properties })\n      this.enqueue('capture', payload, options)\n    })\n  }\n\n  protected aliasStateless(\n    alias: string,\n    distinctId: string,\n    properties?: { [key: string]: any },\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const payload = this.buildPayload({\n        event: '$create_alias',\n        distinct_id: distinctId,\n        properties: {\n          ...(properties || {}),\n          distinct_id: distinctId,\n          alias,\n        },\n      })\n\n      this.enqueue('alias', payload, options)\n    })\n  }\n\n  /***\n   *** GROUPS\n   ***/\n  protected groupIdentifyStateless(\n    groupType: string,\n    groupKey: string | number,\n    groupProperties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions,\n    distinctId?: string,\n    eventProperties?: PostHogEventProperties\n  ): void {\n    this.wrap(() => {\n      const payload = this.buildPayload({\n        distinct_id: distinctId || `$${groupType}_${groupKey}`,\n        event: '$groupidentify',\n        properties: {\n          $group_type: groupType,\n          $group_key: groupKey,\n          $group_set: groupProperties || {},\n          ...(eventProperties || {}),\n        },\n      })\n\n      this.enqueue('capture', payload, options)\n    })\n  }\n\n  /***\n   *** FEATURE FLAGS\n   ***/\n\n  protected async getDecide(\n    distinctId: string,\n    groups: Record<string, string | number> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    extraPayload: Record<string, any> = {}\n  ): Promise<PostHogDecideResponse | undefined> {\n    await this._initPromise\n\n    const url = `${this.host}/decide/?v=3`\n    const fetchOptions: PostHogFetchOptions = {\n      method: 'POST',\n      headers: { ...this.getCustomHeaders(), 'Content-Type': 'application/json' },\n      body: JSON.stringify({\n        token: this.apiKey,\n        distinct_id: distinctId,\n        groups,\n        person_properties: personProperties,\n        group_properties: groupProperties,\n        ...extraPayload,\n      }),\n    }\n    // Don't retry /decide API calls\n    return this.fetchWithRetry(url, fetchOptions, { retryCount: 0 }, this.featureFlagsRequestTimeoutMs)\n      .then((response) => response.json() as Promise<PostHogDecideResponse>)\n      .catch((error) => {\n        this._events.emit('error', error)\n        return undefined\n      })\n  }\n\n  protected async getFeatureFlagStateless(\n    key: string,\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<boolean | string | undefined> {\n    await this._initPromise\n\n    const featureFlags = await this.getFeatureFlagsStateless(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties,\n      disableGeoip\n    )\n\n    if (!featureFlags) {\n      // If we haven't loaded flags yet, or errored out, we respond with undefined\n      return undefined\n    }\n\n    let response = featureFlags[key]\n    // `/decide` v3 returns all flags\n\n    if (response === undefined) {\n      // For cases where the flag is unknown, return false\n      response = false\n    }\n\n    // If we have flags we either return the value (true or string) or false\n    return response\n  }\n\n  protected async getFeatureFlagPayloadStateless(\n    key: string,\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<JsonType | undefined> {\n    await this._initPromise\n\n    const payloads = await this.getFeatureFlagPayloadsStateless(\n      distinctId,\n      groups,\n      personProperties,\n      groupProperties,\n      disableGeoip\n    )\n\n    if (!payloads) {\n      return undefined\n    }\n\n    const response = payloads[key]\n\n    // Undefined means a loading or missing data issue. Null means evaluation happened and there was no match\n    if (response === undefined) {\n      return null\n    }\n\n    return response\n  }\n\n  protected async getFeatureFlagPayloadsStateless(\n    distinctId: string,\n    groups: Record<string, string> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<PostHogDecideResponse['featureFlagPayloads'] | undefined> {\n    await this._initPromise\n\n    const payloads = (\n      await this.getFeatureFlagsAndPayloadsStateless(\n        distinctId,\n        groups,\n        personProperties,\n        groupProperties,\n        disableGeoip\n      )\n    ).payloads\n\n    return payloads\n  }\n\n  protected _parsePayload(response: any): any {\n    try {\n      return JSON.parse(response)\n    } catch {\n      return response\n    }\n  }\n\n  protected async getFeatureFlagsStateless(\n    distinctId: string,\n    groups: Record<string, string | number> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<PostHogDecideResponse['featureFlags'] | undefined> {\n    await this._initPromise\n\n    return (\n      await this.getFeatureFlagsAndPayloadsStateless(\n        distinctId,\n        groups,\n        personProperties,\n        groupProperties,\n        disableGeoip\n      )\n    ).flags\n  }\n\n  protected async getFeatureFlagsAndPayloadsStateless(\n    distinctId: string,\n    groups: Record<string, string | number> = {},\n    personProperties: Record<string, string> = {},\n    groupProperties: Record<string, Record<string, string>> = {},\n    disableGeoip?: boolean\n  ): Promise<{\n    flags: PostHogDecideResponse['featureFlags'] | undefined\n    payloads: PostHogDecideResponse['featureFlagPayloads'] | undefined\n  }> {\n    await this._initPromise\n\n    const extraPayload: Record<string, any> = {}\n    if (disableGeoip ?? this.disableGeoip) {\n      extraPayload['geoip_disable'] = true\n    }\n    const decideResponse = await this.getDecide(distinctId, groups, personProperties, groupProperties, extraPayload)\n\n    const flags = decideResponse?.featureFlags\n    const payloads = decideResponse?.featureFlagPayloads\n\n    let parsedPayloads = payloads\n\n    if (payloads) {\n      parsedPayloads = Object.fromEntries(Object.entries(payloads).map(([k, v]) => [k, this._parsePayload(v)]))\n    }\n\n    return {\n      flags,\n      payloads: parsedPayloads,\n    }\n  }\n\n  /***\n   *** QUEUEING AND FLUSHING\n   ***/\n  protected enqueue(type: string, _message: any, options?: PostHogCaptureOptions): void {\n    this.wrap(() => {\n      if (this.optedOut) {\n        this._events.emit(type, `Library is disabled. Not sending event. To re-enable, call posthog.optIn()`)\n        return\n      }\n\n      const message = {\n        ..._message,\n        type: type,\n        library: this.getLibraryId(),\n        library_version: this.getLibraryVersion(),\n        timestamp: options?.timestamp ? options?.timestamp : currentISOTime(),\n        uuid: options?.uuid ? options.uuid : uuidv7(),\n      }\n\n      const addGeoipDisableProperty = options?.disableGeoip ?? this.disableGeoip\n      if (addGeoipDisableProperty) {\n        if (!message.properties) {\n          message.properties = {}\n        }\n        message['properties']['$geoip_disable'] = true\n      }\n\n      if (message.distinctId) {\n        message.distinct_id = message.distinctId\n        delete message.distinctId\n      }\n\n      const queue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n\n      if (queue.length >= this.maxQueueSize) {\n        queue.shift()\n        this.logMsgIfDebug(() => console.info('Queue is full, the oldest event is dropped.'))\n      }\n\n      queue.push({ message })\n      this.setPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue, queue)\n\n      this._events.emit(type, message)\n\n      // Flush queued events if we meet the flushAt length\n      if (queue.length >= this.flushAt) {\n        this.flushBackground()\n      }\n\n      if (this.flushInterval && !this._flushTimer) {\n        this._flushTimer = safeSetTimeout(() => this.flushBackground(), this.flushInterval)\n      }\n    })\n  }\n\n  private clearFlushTimer(): void {\n    if (this._flushTimer) {\n      clearTimeout(this._flushTimer)\n      this._flushTimer = undefined\n    }\n  }\n\n  /**\n   * Helper for flushing the queue in the background\n   * Avoids unnecessary promise errors\n   */\n  private flushBackground(): void {\n    void this.flush().catch(() => {})\n  }\n\n  async flush(): Promise<any[]> {\n    if (!this.flushPromise) {\n      this.flushPromise = this._flush().finally(() => {\n        this.flushPromise = null\n      })\n      this.addPendingPromise(this.flushPromise)\n    }\n    return this.flushPromise\n  }\n\n  protected getCustomHeaders(): { [key: string]: string } {\n    // Don't set the user agent if we're not on a browser. The latest spec allows\n    // the User-Agent header (see https://fetch.spec.whatwg.org/#terminology-headers\n    // and https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/setRequestHeader),\n    // but browsers such as Chrome and Safari have not caught up.\n    const customUserAgent = this.getCustomUserAgent()\n    const headers: { [key: string]: string } = {}\n    if (customUserAgent && customUserAgent !== '') {\n      headers['User-Agent'] = customUserAgent\n    }\n    return headers\n  }\n\n  private async _flush(): Promise<any[]> {\n    this.clearFlushTimer()\n    await this._initPromise\n\n    const queue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n\n    if (!queue.length) {\n      return []\n    }\n\n    const items = queue.slice(0, this.maxBatchSize)\n    const messages = items.map((item) => item.message)\n\n    const persistQueueChange = (): void => {\n      const refreshedQueue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n      this.setPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue, refreshedQueue.slice(items.length))\n    }\n\n    const data: Record<string, any> = {\n      api_key: this.apiKey,\n      batch: messages,\n      sent_at: currentISOTime(),\n    }\n\n    if (this.historicalMigration) {\n      data.historical_migration = true\n    }\n\n    const payload = JSON.stringify(data)\n\n    const url =\n      this.captureMode === 'form'\n        ? `${this.host}/e/?ip=1&_=${currentTimestamp()}&v=${this.getLibraryVersion()}`\n        : `${this.host}/batch/`\n\n    const fetchOptions: PostHogFetchOptions =\n      this.captureMode === 'form'\n        ? {\n            method: 'POST',\n            mode: 'no-cors',\n            credentials: 'omit',\n            headers: { ...this.getCustomHeaders(), 'Content-Type': 'application/x-www-form-urlencoded' },\n            body: `data=${encodeURIComponent(LZString.compressToBase64(payload))}&compression=lz64`,\n          }\n        : {\n            method: 'POST',\n            headers: { ...this.getCustomHeaders(), 'Content-Type': 'application/json' },\n            body: payload,\n          }\n\n    try {\n      await this.fetchWithRetry(url, fetchOptions)\n    } catch (err) {\n      // depending on the error type, eg a malformed JSON or broken queue, it'll always return an error\n      // and this will be an endless loop, in this case, if the error isn't a network issue, we always remove the items from the queue\n      if (!(err instanceof PostHogFetchNetworkError)) {\n        persistQueueChange()\n      }\n      this._events.emit('error', err)\n\n      throw err\n    }\n\n    persistQueueChange()\n    this._events.emit('flush', messages)\n\n    return messages\n  }\n\n  private async fetchWithRetry(\n    url: string,\n    options: PostHogFetchOptions,\n    retryOptions?: Partial<RetriableOptions>,\n    requestTimeout?: number\n  ): Promise<PostHogFetchResponse> {\n    ;(AbortSignal as any).timeout ??= function timeout(ms: number) {\n      const ctrl = new AbortController()\n      setTimeout(() => ctrl.abort(), ms)\n      return ctrl.signal\n    }\n\n    return await retriable(\n      async () => {\n        let res: PostHogFetchResponse | null = null\n        try {\n          res = await this.fetch(url, {\n            signal: (AbortSignal as any).timeout(requestTimeout ?? this.requestTimeout),\n            ...options,\n          })\n        } catch (e) {\n          // fetch will only throw on network errors or on timeouts\n          throw new PostHogFetchNetworkError(e)\n        }\n        // If we're in no-cors mode, we can't access the response status\n        // We only throw on HTTP errors if we're not in no-cors mode\n        // https://developer.mozilla.org/en-US/docs/Web/API/Request/mode#no-cors\n        const isNoCors = options.mode === 'no-cors'\n        if (!isNoCors && (res.status < 200 || res.status >= 400)) {\n          throw new PostHogFetchHttpError(res)\n        }\n        return res\n      },\n      { ...this._retryOptions, ...retryOptions }\n    )\n  }\n\n  async shutdown(shutdownTimeoutMs: number = 30000): Promise<void> {\n    // A little tricky - we want to have a max shutdown time and enforce it, even if that means we have some\n    // dangling promises. We'll keep track of the timeout and resolve/reject based on that.\n\n    await this._initPromise\n    let hasTimedOut = false\n    this.clearFlushTimer()\n\n    const doShutdown = async (): Promise<void> => {\n      try {\n        await Promise.all(Object.values(this.pendingPromises))\n\n        while (true) {\n          const queue = this.getPersistedProperty<PostHogQueueItem[]>(PostHogPersistedProperty.Queue) || []\n\n          if (queue.length === 0) {\n            break\n          }\n\n          // flush again to make sure we send all events, some of which might've been added\n          // while we were waiting for the pending promises to resolve\n          // For example, see sendFeatureFlags in posthog-node/src/posthog-node.ts::capture\n          await this.flush()\n\n          if (hasTimedOut) {\n            break\n          }\n        }\n      } catch (e) {\n        if (!isPostHogFetchError(e)) {\n          throw e\n        }\n        this.logMsgIfDebug(() => console.error('Error while shutting down PostHog', e))\n      }\n    }\n\n    return Promise.race([\n      new Promise<void>((_, reject) => {\n        safeSetTimeout(() => {\n          this.logMsgIfDebug(() => console.error('Timed out while shutting down PostHog'))\n          hasTimedOut = true\n          reject('Timeout while shutting down PostHog. Some events may not have been sent.')\n        }, shutdownTimeoutMs)\n      }),\n      doShutdown(),\n    ])\n  }\n}\n\nexport abstract class PostHogCore extends PostHogCoreStateless {\n  // options\n  private sendFeatureFlagEvent: boolean\n  private flagCallReported: { [key: string]: boolean } = {}\n\n  // internal\n  protected _decideResponsePromise?: Promise<PostHogDecideResponse | undefined> // TODO: come back to this, fix typing\n  protected _sessionExpirationTimeSeconds: number\n  protected sessionProps: PostHogEventProperties = {}\n\n  constructor(apiKey: string, options?: PostHogCoreOptions) {\n    // Default for stateful mode is to not disable geoip. Only override if explicitly set\n    const disableGeoipOption = options?.disableGeoip ?? false\n\n    // Default for stateful mode is to timeout at 10s. Only override if explicitly set\n    const featureFlagsRequestTimeoutMs = options?.featureFlagsRequestTimeoutMs ?? 10000 // 10 seconds\n\n    super(apiKey, { ...options, disableGeoip: disableGeoipOption, featureFlagsRequestTimeoutMs })\n\n    this.sendFeatureFlagEvent = options?.sendFeatureFlagEvent ?? true\n    this._sessionExpirationTimeSeconds = options?.sessionExpirationTimeSeconds ?? 1800 // 30 minutes\n  }\n\n  protected setupBootstrap(options?: Partial<PostHogCoreOptions>): void {\n    const bootstrap = options?.bootstrap\n    if (!bootstrap) {\n      return\n    }\n\n    // bootstrap options are only set if no persisted values are found\n    // this is to prevent overwriting existing values\n    if (bootstrap.distinctId) {\n      if (bootstrap.isIdentifiedId) {\n        const distinctId = this.getPersistedProperty(PostHogPersistedProperty.DistinctId)\n\n        if (!distinctId) {\n          this.setPersistedProperty(PostHogPersistedProperty.DistinctId, bootstrap.distinctId)\n        }\n      } else {\n        const anonymousId = this.getPersistedProperty(PostHogPersistedProperty.AnonymousId)\n\n        if (!anonymousId) {\n          this.setPersistedProperty(PostHogPersistedProperty.AnonymousId, bootstrap.distinctId)\n        }\n      }\n    }\n\n    const bootstrapfeatureFlags = bootstrap.featureFlags\n    if (bootstrapfeatureFlags && Object.keys(bootstrapfeatureFlags).length) {\n      const bootstrapFlags = Object.keys(bootstrapfeatureFlags)\n        .filter((flag) => !!bootstrapfeatureFlags[flag])\n        .reduce(\n          (res: Record<string, string | boolean>, key) => ((res[key] = bootstrapfeatureFlags[key] || false), res),\n          {}\n        )\n\n      if (Object.keys(bootstrapFlags).length) {\n        this.setPersistedProperty(PostHogPersistedProperty.BootstrapFeatureFlags, bootstrapFlags)\n\n        const currentFlags =\n          this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(PostHogPersistedProperty.FeatureFlags) || {}\n        const newFeatureFlags = { ...bootstrapFlags, ...currentFlags }\n        this.setKnownFeatureFlags(newFeatureFlags)\n      }\n\n      const bootstrapFlagPayloads = bootstrap.featureFlagPayloads\n      if (bootstrapFlagPayloads && Object.keys(bootstrapFlagPayloads).length) {\n        this.setPersistedProperty(PostHogPersistedProperty.BootstrapFeatureFlagPayloads, bootstrapFlagPayloads)\n\n        const currentFlagPayloads =\n          this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n            PostHogPersistedProperty.FeatureFlagPayloads\n          ) || {}\n        const newFeatureFlagPayloads = { ...bootstrapFlagPayloads, ...currentFlagPayloads }\n        this.setKnownFeatureFlagPayloads(newFeatureFlagPayloads)\n      }\n    }\n  }\n\n  // NOTE: Props are lazy loaded from localstorage hence the complex getter setter logic\n  private get props(): PostHogEventProperties {\n    if (!this._props) {\n      this._props = this.getPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.Props)\n    }\n    return this._props || {}\n  }\n\n  private set props(val: PostHogEventProperties | undefined) {\n    this._props = val\n  }\n\n  private clearProps(): void {\n    this.props = undefined\n    this.sessionProps = {}\n    this.flagCallReported = {}\n  }\n\n  private _props: PostHogEventProperties | undefined\n\n  on(event: string, cb: (...args: any[]) => void): () => void {\n    return this._events.on(event, cb)\n  }\n\n  reset(propertiesToKeep?: PostHogPersistedProperty[]): void {\n    this.wrap(() => {\n      const allPropertiesToKeep = [PostHogPersistedProperty.Queue, ...(propertiesToKeep || [])]\n\n      // clean up props\n      this.clearProps()\n\n      for (const key of <(keyof typeof PostHogPersistedProperty)[]>Object.keys(PostHogPersistedProperty)) {\n        if (!allPropertiesToKeep.includes(PostHogPersistedProperty[key])) {\n          this.setPersistedProperty((PostHogPersistedProperty as any)[key], null)\n        }\n      }\n    })\n  }\n\n  protected getCommonEventProperties(): any {\n    const featureFlags = this.getFeatureFlags()\n\n    const featureVariantProperties: Record<string, string | boolean> = {}\n    if (featureFlags) {\n      for (const [feature, variant] of Object.entries(featureFlags)) {\n        featureVariantProperties[`$feature/${feature}`] = variant\n      }\n    }\n    return {\n      $active_feature_flags: featureFlags ? Object.keys(featureFlags) : undefined,\n      ...featureVariantProperties,\n      ...super.getCommonEventProperties(),\n    }\n  }\n\n  private enrichProperties(properties?: PostHogEventProperties): any {\n    return {\n      ...this.props, // Persisted properties first\n      ...this.sessionProps, // Followed by session properties\n      ...(properties || {}), // Followed by user specified properties\n      ...this.getCommonEventProperties(), // Followed by FF props\n      $session_id: this.getSessionId(),\n    }\n  }\n\n  /**\n   * * @returns {string} The stored session ID for the current session. This may be an empty string if the client is not yet fully initialized.\n   */\n  getSessionId(): string {\n    if (!this._isInitialized) {\n      return ''\n    }\n\n    let sessionId = this.getPersistedProperty<string>(PostHogPersistedProperty.SessionId)\n    const sessionTimestamp = this.getPersistedProperty<number>(PostHogPersistedProperty.SessionLastTimestamp) || 0\n    if (!sessionId || Date.now() - sessionTimestamp > this._sessionExpirationTimeSeconds * 1000) {\n      sessionId = uuidv7()\n      this.setPersistedProperty(PostHogPersistedProperty.SessionId, sessionId)\n    }\n    this.setPersistedProperty(PostHogPersistedProperty.SessionLastTimestamp, Date.now())\n\n    return sessionId\n  }\n\n  resetSessionId(): void {\n    this.wrap(() => {\n      this.setPersistedProperty(PostHogPersistedProperty.SessionId, null)\n      this.setPersistedProperty(PostHogPersistedProperty.SessionLastTimestamp, null)\n    })\n  }\n\n  /**\n   * * @returns {string} The stored anonymous ID. This may be an empty string if the client is not yet fully initialized.\n   */\n  getAnonymousId(): string {\n    if (!this._isInitialized) {\n      return ''\n    }\n\n    let anonId = this.getPersistedProperty<string>(PostHogPersistedProperty.AnonymousId)\n    if (!anonId) {\n      anonId = uuidv7()\n      this.setPersistedProperty(PostHogPersistedProperty.AnonymousId, anonId)\n    }\n    return anonId\n  }\n\n  /**\n   * * @returns {string} The stored distinct ID. This may be an empty string if the client is not yet fully initialized.\n   */\n  getDistinctId(): string {\n    if (!this._isInitialized) {\n      return ''\n    }\n\n    return this.getPersistedProperty<string>(PostHogPersistedProperty.DistinctId) || this.getAnonymousId()\n  }\n\n  async unregister(property: string): Promise<void> {\n    this.wrap(() => {\n      delete this.props[property]\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.Props, this.props)\n    })\n  }\n\n  async register(properties: { [key: string]: any }): Promise<void> {\n    this.wrap(() => {\n      this.props = {\n        ...this.props,\n        ...properties,\n      }\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.Props, this.props)\n    })\n  }\n\n  registerForSession(properties: { [key: string]: any }): void {\n    this.sessionProps = {\n      ...this.sessionProps,\n      ...properties,\n    }\n  }\n\n  unregisterForSession(property: string): void {\n    delete this.sessionProps[property]\n  }\n\n  /***\n   *** TRACKING\n   ***/\n  identify(distinctId?: string, properties?: PostHogEventProperties, options?: PostHogCaptureOptions): void {\n    this.wrap(() => {\n      const previousDistinctId = this.getDistinctId()\n      distinctId = distinctId || previousDistinctId\n\n      if (properties?.$groups) {\n        this.groups(properties.$groups)\n      }\n\n      // promote $set and $set_once to top level\n      const userPropsOnce = properties?.$set_once\n      delete properties?.$set_once\n\n      // if no $set is provided we assume all properties are $set\n      const userProps = properties?.$set || properties\n\n      const allProperties = this.enrichProperties({\n        $anon_distinct_id: this.getAnonymousId(),\n        $set: userProps,\n        $set_once: userPropsOnce,\n      })\n\n      if (distinctId !== previousDistinctId) {\n        // We keep the AnonymousId to be used by decide calls and identify to link the previousId\n        this.setPersistedProperty(PostHogPersistedProperty.AnonymousId, previousDistinctId)\n        this.setPersistedProperty(PostHogPersistedProperty.DistinctId, distinctId)\n        this.reloadFeatureFlags()\n      }\n\n      super.identifyStateless(distinctId, allProperties, options)\n    })\n  }\n\n  capture(event: string, properties?: { [key: string]: any }, options?: PostHogCaptureOptions): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n\n      if (properties?.$groups) {\n        this.groups(properties.$groups)\n      }\n\n      const allProperties = this.enrichProperties(properties)\n\n      super.captureStateless(distinctId, event, allProperties, options)\n    })\n  }\n\n  alias(alias: string): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n      const allProperties = this.enrichProperties({})\n\n      super.aliasStateless(alias, distinctId, allProperties)\n    })\n  }\n\n  autocapture(\n    eventType: string,\n    elements: PostHogAutocaptureElement[],\n    properties: PostHogEventProperties = {},\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n      const payload = {\n        distinct_id: distinctId,\n        event: '$autocapture',\n        properties: {\n          ...this.enrichProperties(properties),\n          $event_type: eventType,\n          $elements: elements,\n        },\n      }\n\n      this.enqueue('autocapture', payload, options)\n    })\n  }\n\n  /***\n   *** GROUPS\n   ***/\n\n  groups(groups: { [type: string]: string | number }): void {\n    this.wrap(() => {\n      // Get persisted groups\n      const existingGroups = this.props.$groups || {}\n\n      this.register({\n        $groups: {\n          ...existingGroups,\n          ...groups,\n        },\n      })\n\n      if (Object.keys(groups).find((type) => existingGroups[type] !== groups[type])) {\n        this.reloadFeatureFlags()\n      }\n    })\n  }\n\n  group(\n    groupType: string,\n    groupKey: string | number,\n    groupProperties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      this.groups({\n        [groupType]: groupKey,\n      })\n\n      if (groupProperties) {\n        this.groupIdentify(groupType, groupKey, groupProperties, options)\n      }\n    })\n  }\n\n  groupIdentify(\n    groupType: string,\n    groupKey: string | number,\n    groupProperties?: PostHogEventProperties,\n    options?: PostHogCaptureOptions\n  ): void {\n    this.wrap(() => {\n      const distinctId = this.getDistinctId()\n      const eventProperties = this.enrichProperties({})\n      super.groupIdentifyStateless(groupType, groupKey, groupProperties, options, distinctId, eventProperties)\n    })\n  }\n\n  /***\n   * PROPERTIES\n   ***/\n  setPersonPropertiesForFlags(properties: { [type: string]: string }): void {\n    this.wrap(() => {\n      // Get persisted person properties\n      const existingProperties =\n        this.getPersistedProperty<Record<string, string>>(PostHogPersistedProperty.PersonProperties) || {}\n\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.PersonProperties, {\n        ...existingProperties,\n        ...properties,\n      })\n    })\n  }\n\n  resetPersonPropertiesForFlags(): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.PersonProperties, {})\n    })\n  }\n\n  /** @deprecated - Renamed to setPersonPropertiesForFlags */\n  personProperties(properties: { [type: string]: string }): void {\n    return this.setPersonPropertiesForFlags(properties)\n  }\n\n  setGroupPropertiesForFlags(properties: { [type: string]: Record<string, string> }): void {\n    this.wrap(() => {\n      // Get persisted group properties\n      const existingProperties =\n        this.getPersistedProperty<Record<string, Record<string, string>>>(PostHogPersistedProperty.GroupProperties) ||\n        {}\n\n      if (Object.keys(existingProperties).length !== 0) {\n        Object.keys(existingProperties).forEach((groupType) => {\n          existingProperties[groupType] = {\n            ...existingProperties[groupType],\n            ...properties[groupType],\n          }\n          delete properties[groupType]\n        })\n      }\n\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.GroupProperties, {\n        ...existingProperties,\n        ...properties,\n      })\n    })\n  }\n\n  resetGroupPropertiesForFlags(): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogEventProperties>(PostHogPersistedProperty.GroupProperties, {})\n    })\n  }\n\n  /** @deprecated - Renamed to setGroupPropertiesForFlags */\n  groupProperties(properties: { [type: string]: Record<string, string> }): void {\n    this.wrap(() => {\n      this.setGroupPropertiesForFlags(properties)\n    })\n  }\n\n  /***\n   *** FEATURE FLAGS\n   ***/\n  private async decideAsync(sendAnonDistinctId: boolean = true): Promise<PostHogDecideResponse | undefined> {\n    await this._initPromise\n    if (this._decideResponsePromise) {\n      return this._decideResponsePromise\n    }\n    return this._decideAsync(sendAnonDistinctId)\n  }\n\n  private async _decideAsync(sendAnonDistinctId: boolean = true): Promise<PostHogDecideResponse | undefined> {\n    this._decideResponsePromise = this._initPromise\n      .then(() => {\n        const distinctId = this.getDistinctId()\n        const groups = this.props.$groups || {}\n        const personProperties =\n          this.getPersistedProperty<Record<string, string>>(PostHogPersistedProperty.PersonProperties) || {}\n        const groupProperties =\n          this.getPersistedProperty<Record<string, Record<string, string>>>(PostHogPersistedProperty.GroupProperties) ||\n          {}\n\n        const extraProperties = {\n          $anon_distinct_id: sendAnonDistinctId ? this.getAnonymousId() : undefined,\n        }\n\n        return super.getDecide(distinctId, groups, personProperties, groupProperties, extraProperties).then((res) => {\n          if (res?.featureFlags) {\n            // clear flag call reported if we have new flags since they might have changed\n            if (this.sendFeatureFlagEvent) {\n              this.flagCallReported = {}\n            }\n\n            let newFeatureFlags = res.featureFlags\n            let newFeatureFlagPayloads = res.featureFlagPayloads\n            if (res.errorsWhileComputingFlags) {\n              // if not all flags were computed, we upsert flags instead of replacing them\n              const currentFlags = this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(\n                PostHogPersistedProperty.FeatureFlags\n              )\n              const currentFlagPayloads = this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n                PostHogPersistedProperty.FeatureFlagPayloads\n              )\n              newFeatureFlags = { ...currentFlags, ...res.featureFlags }\n              newFeatureFlagPayloads = { ...currentFlagPayloads, ...res.featureFlagPayloads }\n            }\n            this.setKnownFeatureFlags(newFeatureFlags)\n            this.setKnownFeatureFlagPayloads(\n              Object.fromEntries(\n                Object.entries(newFeatureFlagPayloads || {}).map(([k, v]) => [k, this._parsePayload(v)])\n              )\n            )\n            // Mark that we hit the /decide endpoint so we can capture this in the $feature_flag_called event\n            this.setPersistedProperty(PostHogPersistedProperty.DecideEndpointWasHit, true)\n\n            const sessionReplay = res?.sessionRecording\n            if (sessionReplay) {\n              this.setPersistedProperty(PostHogPersistedProperty.SessionReplay, sessionReplay)\n              this.logMsgIfDebug(() =>\n                console.log('PostHog Debug', 'Session replay config: ', JSON.stringify(sessionReplay))\n              )\n            } else {\n              this.logMsgIfDebug(() => console.info('PostHog Debug', 'Session replay config disabled.'))\n              this.setPersistedProperty(PostHogPersistedProperty.SessionReplay, null)\n            }\n          }\n\n          return res\n        })\n      })\n      .finally(() => {\n        this._decideResponsePromise = undefined\n      })\n    return this._decideResponsePromise\n  }\n\n  private setKnownFeatureFlags(featureFlags: PostHogDecideResponse['featureFlags']): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogDecideResponse['featureFlags']>(\n        PostHogPersistedProperty.FeatureFlags,\n        featureFlags\n      )\n      this._events.emit('featureflags', featureFlags)\n    })\n  }\n\n  private setKnownFeatureFlagPayloads(featureFlagPayloads: PostHogDecideResponse['featureFlagPayloads']): void {\n    this.wrap(() => {\n      this.setPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n        PostHogPersistedProperty.FeatureFlagPayloads,\n        featureFlagPayloads\n      )\n    })\n  }\n\n  getFeatureFlag(key: string): boolean | string | undefined {\n    const featureFlags = this.getFeatureFlags()\n\n    if (!featureFlags) {\n      // If we haven't loaded flags yet, or errored out, we respond with undefined\n      return undefined\n    }\n\n    let response = featureFlags[key]\n    // `/decide` v3 returns all flags\n\n    if (response === undefined) {\n      // For cases where the flag is unknown, return false\n      response = false\n    }\n\n    if (this.sendFeatureFlagEvent && !this.flagCallReported[key]) {\n      this.flagCallReported[key] = true\n      this.capture('$feature_flag_called', {\n        $feature_flag: key,\n        $feature_flag_response: response,\n        $feature_flag_bootstrapped_response: this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(\n          PostHogPersistedProperty.BootstrapFeatureFlags\n        )?.[key],\n        $feature_flag_bootstrapped_payload: this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n          PostHogPersistedProperty.BootstrapFeatureFlagPayloads\n        )?.[key],\n        // If we haven't yet received a response from the /decide endpoint, we must have used the bootstrapped value\n        $used_bootstrap_value: !this.getPersistedProperty(PostHogPersistedProperty.DecideEndpointWasHit),\n      })\n    }\n\n    // If we have flags we either return the value (true or string) or false\n    return response\n  }\n\n  getFeatureFlagPayload(key: string): JsonType | undefined {\n    const payloads = this.getFeatureFlagPayloads()\n\n    if (!payloads) {\n      return undefined\n    }\n\n    const response = payloads[key]\n\n    // Undefined means a loading or missing data issue. Null means evaluation happened and there was no match\n    if (response === undefined) {\n      return null\n    }\n\n    return response\n  }\n\n  getFeatureFlagPayloads(): PostHogDecideResponse['featureFlagPayloads'] | undefined {\n    const payloads = this.getPersistedProperty<PostHogDecideResponse['featureFlagPayloads']>(\n      PostHogPersistedProperty.FeatureFlagPayloads\n    )\n\n    return payloads\n  }\n\n  getFeatureFlags(): PostHogDecideResponse['featureFlags'] | undefined {\n    // NOTE: We don't check for _initPromise here as the function is designed to be\n    // callable before the state being loaded anyways\n    let flags = this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(PostHogPersistedProperty.FeatureFlags)\n    const overriddenFlags = this.getPersistedProperty<PostHogDecideResponse['featureFlags']>(\n      PostHogPersistedProperty.OverrideFeatureFlags\n    )\n\n    if (!overriddenFlags) {\n      return flags\n    }\n\n    flags = flags || {}\n\n    for (const key in overriddenFlags) {\n      if (!overriddenFlags[key]) {\n        delete flags[key]\n      } else {\n        flags[key] = overriddenFlags[key]\n      }\n    }\n\n    return flags\n  }\n\n  getFeatureFlagsAndPayloads(): {\n    flags: PostHogDecideResponse['featureFlags'] | undefined\n    payloads: PostHogDecideResponse['featureFlagPayloads'] | undefined\n  } {\n    const flags = this.getFeatureFlags()\n    const payloads = this.getFeatureFlagPayloads()\n\n    return {\n      flags,\n      payloads,\n    }\n  }\n\n  isFeatureEnabled(key: string): boolean | undefined {\n    const response = this.getFeatureFlag(key)\n    if (response === undefined) {\n      return undefined\n    }\n    return !!response\n  }\n\n  // Used when we want to trigger the reload but we don't care about the result\n  reloadFeatureFlags(cb?: (err?: Error, flags?: PostHogDecideResponse['featureFlags']) => void): void {\n    this.decideAsync()\n      .then((res) => {\n        cb?.(undefined, res?.featureFlags)\n      })\n      .catch((e) => {\n        cb?.(e, undefined)\n        if (!cb) {\n          this.logMsgIfDebug(() => console.log('[PostHog] Error reloading feature flags', e))\n        }\n      })\n  }\n\n  async reloadFeatureFlagsAsync(\n    sendAnonDistinctId: boolean = true\n  ): Promise<PostHogDecideResponse['featureFlags'] | undefined> {\n    return (await this.decideAsync(sendAnonDistinctId))?.featureFlags\n  }\n\n  onFeatureFlags(cb: (flags: PostHogDecideResponse['featureFlags']) => void): () => void {\n    return this.on('featureflags', async () => {\n      const flags = this.getFeatureFlags()\n      if (flags) {\n        cb(flags)\n      }\n    })\n  }\n\n  onFeatureFlag(key: string, cb: (value: string | boolean) => void): () => void {\n    return this.on('featureflags', async () => {\n      const flagResponse = this.getFeatureFlag(key)\n      if (flagResponse !== undefined) {\n        cb(flagResponse)\n      }\n    })\n  }\n\n  async overrideFeatureFlag(flags: PostHogDecideResponse['featureFlags'] | null): Promise<void> {\n    this.wrap(() => {\n      if (flags === null) {\n        return this.setPersistedProperty(PostHogPersistedProperty.OverrideFeatureFlags, null)\n      }\n      return this.setPersistedProperty(PostHogPersistedProperty.OverrideFeatureFlags, flags)\n    })\n  }\n}\n\nexport * from './types'\nexport { LZString }\n","import { utils } from '../../posthog-core'\nimport { version } from '../package.json'\n\nexport function getContext(window: Window | undefined): any {\n  let context = {}\n  if (window?.navigator) {\n    const userAgent = window.navigator.userAgent\n    const osValue = os(window)\n    context = {\n      ...context,\n      ...(osValue !== undefined && { $os: osValue }),\n      $browser: browser(userAgent, window.navigator.vendor, !!(window as any).opera),\n      $referrer: window.document.referrer,\n      $referring_domain: referringDomain(window.document.referrer),\n      $device: device(userAgent),\n      $current_url: window.location.href,\n      $host: window.location.host,\n      $pathname: window.location.pathname,\n      $browser_version: browserVersion(userAgent, window.navigator.vendor, !!(window as any).opera),\n      $screen_height: window.screen.height,\n      $screen_width: window.screen.width,\n      $screen_dpr: window.devicePixelRatio,\n    }\n  }\n\n  context = {\n    ...context,\n    $lib: 'js',\n    $lib_version: version,\n    $insert_id: Math.random().toString(36).substring(2, 10) + Math.random().toString(36).substring(2, 10),\n    $time: utils.currentTimestamp() / 1000, // epoch time in seconds\n  }\n  return context // TODO: strip empty props?\n}\n\nfunction includes(haystack: string, needle: string): boolean {\n  return haystack.indexOf(needle) >= 0\n}\n\nfunction browser(userAgent: string, vendor: string, opera: boolean): string {\n  vendor = vendor || '' // vendor is undefined for at least IE9\n  if (opera || includes(userAgent, ' OPR/')) {\n    if (includes(userAgent, 'Mini')) {\n      return 'Opera Mini'\n    }\n    return 'Opera'\n  } else if (/(BlackBerry|PlayBook|BB10)/i.test(userAgent)) {\n    return 'BlackBerry'\n  } else if (includes(userAgent, 'IEMobile') || includes(userAgent, 'WPDesktop')) {\n    return 'Internet Explorer Mobile'\n  } else if (includes(userAgent, 'SamsungBrowser/')) {\n    // https://developer.samsung.com/internet/user-agent-string-format\n    return 'Samsung Internet'\n  } else if (includes(userAgent, 'Edge') || includes(userAgent, 'Edg/')) {\n    return 'Microsoft Edge'\n  } else if (includes(userAgent, 'FBIOS')) {\n    return 'Facebook Mobile'\n  } else if (includes(userAgent, 'Chrome')) {\n    return 'Chrome'\n  } else if (includes(userAgent, 'CriOS')) {\n    return 'Chrome iOS'\n  } else if (includes(userAgent, 'UCWEB') || includes(userAgent, 'UCBrowser')) {\n    return 'UC Browser'\n  } else if (includes(userAgent, 'FxiOS')) {\n    return 'Firefox iOS'\n  } else if (includes(vendor, 'Apple')) {\n    if (includes(userAgent, 'Mobile')) {\n      return 'Mobile Safari'\n    }\n    return 'Safari'\n  } else if (includes(userAgent, 'Android')) {\n    return 'Android Mobile'\n  } else if (includes(userAgent, 'Konqueror')) {\n    return 'Konqueror'\n  } else if (includes(userAgent, 'Firefox')) {\n    return 'Firefox'\n  } else if (includes(userAgent, 'MSIE') || includes(userAgent, 'Trident/')) {\n    return 'Internet Explorer'\n  } else if (includes(userAgent, 'Gecko')) {\n    return 'Mozilla'\n  } else {\n    return ''\n  }\n}\n\nfunction browserVersion(userAgent: string, vendor: string, opera: boolean): number | null {\n  const regexList = {\n    'Internet Explorer Mobile': /rv:(\\d+(\\.\\d+)?)/,\n    'Microsoft Edge': /Edge?\\/(\\d+(\\.\\d+)?)/,\n    Chrome: /Chrome\\/(\\d+(\\.\\d+)?)/,\n    'Chrome iOS': /CriOS\\/(\\d+(\\.\\d+)?)/,\n    'UC Browser': /(UCBrowser|UCWEB)\\/(\\d+(\\.\\d+)?)/,\n    Safari: /Version\\/(\\d+(\\.\\d+)?)/,\n    'Mobile Safari': /Version\\/(\\d+(\\.\\d+)?)/,\n    Opera: /(Opera|OPR)\\/(\\d+(\\.\\d+)?)/,\n    Firefox: /Firefox\\/(\\d+(\\.\\d+)?)/,\n    'Firefox iOS': /FxiOS\\/(\\d+(\\.\\d+)?)/,\n    Konqueror: /Konqueror:(\\d+(\\.\\d+)?)/,\n    BlackBerry: /BlackBerry (\\d+(\\.\\d+)?)/,\n    'Android Mobile': /android\\s(\\d+(\\.\\d+)?)/,\n    'Samsung Internet': /SamsungBrowser\\/(\\d+(\\.\\d+)?)/,\n    'Internet Explorer': /(rv:|MSIE )(\\d+(\\.\\d+)?)/,\n    Mozilla: /rv:(\\d+(\\.\\d+)?)/,\n  }\n\n  const browserString = browser(userAgent, vendor, opera) as keyof typeof regexList\n  const regex: RegExp = regexList[browserString] || undefined\n\n  if (regex === undefined) {\n    return null\n  }\n  const matches = userAgent.match(regex)\n  if (!matches) {\n    return null\n  }\n  return parseFloat(matches[matches.length - 2])\n}\n\nfunction os(window: Window | undefined): string | undefined {\n  if (!window?.navigator) {\n    return undefined\n  }\n  const a = window.navigator.userAgent\n  if (/Windows/i.test(a)) {\n    if (/Phone/.test(a) || /WPDesktop/.test(a)) {\n      return 'Windows Phone'\n    }\n    return 'Windows'\n  } else if (/(iPhone|iPad|iPod)/.test(a)) {\n    return 'iOS'\n  } else if (/Android/.test(a)) {\n    return 'Android'\n  } else if (/(BlackBerry|PlayBook|BB10)/i.test(a)) {\n    return 'BlackBerry'\n  } else if (/Mac/i.test(a)) {\n    return 'Mac OS X'\n  } else if (/Linux/.test(a)) {\n    return 'Linux'\n  } else if (/CrOS/.test(a)) {\n    return 'Chrome OS'\n  } else {\n    return undefined\n  }\n}\n\nfunction device(userAgent: string): string {\n  if (/Windows Phone/i.test(userAgent) || /WPDesktop/.test(userAgent)) {\n    return 'Windows Phone'\n  } else if (/iPad/.test(userAgent)) {\n    return 'iPad'\n  } else if (/iPod/.test(userAgent)) {\n    return 'iPod Touch'\n  } else if (/iPhone/.test(userAgent)) {\n    return 'iPhone'\n  } else if (/(BlackBerry|PlayBook|BB10)/i.test(userAgent)) {\n    return 'BlackBerry'\n  } else if (/Android/.test(userAgent)) {\n    return 'Android'\n  } else {\n    return ''\n  }\n}\n\nfunction referringDomain(referrer: string): string {\n  const split = referrer.split('/')\n  if (split.length >= 3) {\n    return split[2]\n  }\n  return ''\n}\n","import { PostHogOptions } from './types'\n\nexport type PostHogStorage = {\n  getItem: (key: string) => string | null | undefined\n  setItem: (key: string, value: string) => void\n  removeItem: (key: string) => void\n  clear: () => void\n  getAllKeys: () => readonly string[]\n}\n\n// Methods partially borrowed from quirksmode.org/js/cookies.html\nexport const cookieStore: PostHogStorage = {\n  getItem(key) {\n    try {\n      const nameEQ = key + '='\n      const ca = document.cookie.split(';')\n      for (let i = 0; i < ca.length; i++) {\n        let c = ca[i]\n        while (c.charAt(0) == ' ') {\n          c = c.substring(1, c.length)\n        }\n        if (c.indexOf(nameEQ) === 0) {\n          return decodeURIComponent(c.substring(nameEQ.length, c.length))\n        }\n      }\n    } catch (err) {}\n    return null\n  },\n\n  setItem(key: string, value: string) {\n    try {\n      const cdomain = '',\n        expires = '',\n        secure = ''\n\n      const new_cookie_val = key + '=' + encodeURIComponent(value) + expires + '; path=/' + cdomain + secure\n      document.cookie = new_cookie_val\n    } catch (err) {\n      return\n    }\n  },\n\n  removeItem(name) {\n    try {\n      cookieStore.setItem(name, '')\n    } catch (err) {\n      return\n    }\n  },\n  clear() {\n    document.cookie = ''\n  },\n  getAllKeys() {\n    const ca = document.cookie.split(';')\n    const keys = []\n\n    for (let i = 0; i < ca.length; i++) {\n      let c = ca[i]\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1, c.length)\n      }\n      keys.push(c.split('=')[0])\n    }\n\n    return keys\n  },\n}\n\nconst createStorageLike = (store: any): PostHogStorage => {\n  return {\n    getItem(key) {\n      return store.getItem(key)\n    },\n\n    setItem(key, value) {\n      store.setItem(key, value)\n    },\n\n    removeItem(key) {\n      store.removeItem(key)\n    },\n    clear() {\n      store.clear()\n    },\n    getAllKeys() {\n      const keys = []\n      for (const key in localStorage) {\n        keys.push(key)\n      }\n      return keys\n    },\n  }\n}\n\nconst checkStoreIsSupported = (storage: PostHogStorage, key = '__mplssupport__'): boolean => {\n  try {\n    const val = 'xyz'\n    storage.setItem(key, val)\n    if (storage.getItem(key) !== val) {\n      return false\n    }\n    storage.removeItem(key)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n\nlet localStore: PostHogStorage | undefined = undefined\nlet sessionStore: PostHogStorage | undefined = undefined\n\nconst createMemoryStorage = (): PostHogStorage => {\n  const _cache: { [key: string]: any | undefined } = {}\n\n  const store: PostHogStorage = {\n    getItem(key) {\n      return _cache[key]\n    },\n\n    setItem(key, value) {\n      _cache[key] = value !== null ? value : undefined\n    },\n\n    removeItem(key) {\n      delete _cache[key]\n    },\n    clear() {\n      for (const key in _cache) {\n        delete _cache[key]\n      }\n    },\n    getAllKeys() {\n      const keys = []\n      for (const key in _cache) {\n        keys.push(key)\n      }\n      return keys\n    },\n  }\n  return store\n}\n\nexport const getStorage = (type: PostHogOptions['persistence'], window: Window | undefined): PostHogStorage => {\n  if (window) {\n    if (!localStore) {\n      const _localStore = createStorageLike(window.localStorage)\n      localStore = checkStoreIsSupported(_localStore) ? _localStore : undefined\n    }\n\n    if (!sessionStore) {\n      const _sessionStore = createStorageLike(window.sessionStorage)\n      sessionStore = checkStoreIsSupported(_sessionStore) ? _sessionStore : undefined\n    }\n  }\n\n  switch (type) {\n    case 'cookie':\n      return cookieStore || localStore || sessionStore || createMemoryStorage()\n    case 'localStorage':\n      return localStore || sessionStore || createMemoryStorage()\n    case 'sessionStorage':\n      return sessionStore || createMemoryStorage()\n    case 'memory':\n      return createMemoryStorage()\n    default:\n      return createMemoryStorage()\n  }\n}\n","import {\n  PostHogCore,\n  PostHogFetchOptions,\n  PostHogFetchResponse,\n  PostHogPersistedProperty,\n} from '../../posthog-core/src'\nimport { getContext } from './context'\nimport { PostHogStorage, getStorage } from './storage'\nimport { version } from '../package.json'\nimport { PostHogOptions } from './types'\nimport { getFetch } from 'posthog-core/src/utils'\n\nexport class PostHog extends PostHogCore {\n  private _storage: PostHogStorage\n  private _storageCache: any\n  private _storageKey: string\n\n  constructor(apiKey: string, options?: PostHogOptions) {\n    super(apiKey, options)\n\n    // posthog-js stores options in one object on\n    this._storageKey = options?.persistence_name ? `ph_${options.persistence_name}` : `ph_${apiKey}_posthog`\n\n    this._storage = getStorage(options?.persistence || 'localStorage', this.getWindow())\n    this.setupBootstrap(options)\n\n    if (options?.preloadFeatureFlags !== false) {\n      this.reloadFeatureFlags()\n    }\n  }\n\n  private getWindow(): Window | undefined {\n    return typeof window !== 'undefined' ? window : undefined\n  }\n\n  getPersistedProperty<T>(key: PostHogPersistedProperty): T | undefined {\n    if (!this._storageCache) {\n      this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || '{}') || {}\n    }\n\n    return this._storageCache[key]\n  }\n\n  setPersistedProperty<T>(key: PostHogPersistedProperty, value: T | null): void {\n    if (!this._storageCache) {\n      this._storageCache = JSON.parse(this._storage.getItem(this._storageKey) || '{}') || {}\n    }\n\n    if (value === null) {\n      delete this._storageCache[key]\n    } else {\n      this._storageCache[key] = value\n    }\n\n    this._storage.setItem(this._storageKey, JSON.stringify(this._storageCache))\n  }\n\n  fetch(url: string, options: PostHogFetchOptions): Promise<PostHogFetchResponse> {\n    const fetchFn = getFetch()\n\n    if (!fetchFn) {\n      // error will be handled by the caller (fetchWithRetry)\n      return Promise.reject(new Error('Fetch API is not available in this environment.'))\n    }\n\n    return fetchFn(url, options)\n  }\n\n  getLibraryId(): string {\n    return 'posthog-js-lite'\n  }\n\n  getLibraryVersion(): string {\n    return version\n  }\n\n  getCustomUserAgent(): void {\n    return\n  }\n\n  getCommonEventProperties(): any {\n    return {\n      ...super.getCommonEventProperties(),\n      ...getContext(this.getWindow()),\n    }\n  }\n}\n"],"names":["getContext","window","context","navigator","userAgent","osValue","os","undefined","$os","$browser","browser","vendor","opera","$referrer","document","referrer","$referring_domain","referringDomain","$device","device","$current_url","location","href","$host","host","$pathname","pathname","$browser_version","browserVersion","$screen_height","screen","height","$screen_width","width","$screen_dpr","devicePixelRatio","$lib","$lib_version","version","$insert_id","Math","random","toString","substring","$time","utils","includes","haystack","needle","indexOf","test","regexList","Chrome","Safari","Opera","Firefox","Konqueror","BlackBerry","Mozilla","browserString","regex","matches","match","parseFloat","length","a","split","cookieStore","getItem","key","nameEQ","ca","cookie","i","c","charAt","decodeURIComponent","err","setItem","value","cdomain","expires","secure","new_cookie_val","encodeURIComponent","removeItem","name","clear","getAllKeys","keys","push","createStorageLike","store","localStorage","checkStoreIsSupported","storage","val","localStore","sessionStore","createMemoryStorage","_cache","getStorage","type","_localStore","_sessionStore","sessionStorage","PostHog","PostHogCore","constructor","apiKey","options","_storageKey","persistence_name","_storage","persistence","getWindow","setupBootstrap","preloadFeatureFlags","reloadFeatureFlags","getPersistedProperty","_storageCache","JSON","parse","setPersistedProperty","stringify","fetch","url","fetchFn","getFetch","Promise","reject","Error","getLibraryId","getLibraryVersion","getCustomUserAgent","getCommonEventProperties"],"mappings":"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"}