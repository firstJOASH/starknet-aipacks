import type { AuthClient, Session, User, ReadWriteSession, TSessionResponse } from "./__types__/base";
export declare enum StorageKeys {
    AuthBundle = "@turnkey/auth_bundle",
    CurrentUser = "@turnkey/current_user",
    UserSession = "@turnkey/session/v1",
    ReadWriteSession = "@turnkey/read_write_session",
    Session = "@turnkey/session/v2",
    Client = "@turnkey/client"
}
interface StorageValue {
    [StorageKeys.AuthBundle]: string;
    [StorageKeys.CurrentUser]: User;
    [StorageKeys.UserSession]: User;
    [StorageKeys.ReadWriteSession]: ReadWriteSession;
    [StorageKeys.Session]: Session;
    [StorageKeys.Client]: AuthClient;
}
export declare const getStorageValue: <K extends StorageKeys>(storageKey: K) => Promise<StorageValue[K] | undefined>;
export declare const setStorageValue: <K extends StorageKeys>(storageKey: K, storageValue: StorageValue[K]) => Promise<any>;
export declare const removeStorageValue: <K extends StorageKeys>(storageKey: K) => Promise<void>;
/**
 * Saves a session and client to storage.
 *
 * @param {Session} session - The session response containing session details.
 * @param {AuthClient} authClient - The authentication client used for the session.
 * @throws Will throw an error if the authentication client is not set.
 * @returns {Promise<void>} A promise that resolves when the session is saved.
 */
export declare const storeSession: (session: Session, client?: AuthClient) => Promise<void>;
/**
 * Saves a user session to storage.
 *
 * @param {TSessionResponse} sessionResponse - The session response containing session details.
 * @param {AuthClient} authClient - The authentication client used for the session.
 * @throws Will throw an error if the authentication client is not set.
 * @returns {Promise<void>} A promise that resolves when the session is saved.
 */
export declare const saveSession: ({ organizationId, organizationName, sessionExpiry, credentialBundle, userId, username, ...sessionResponse }: TSessionResponse, authClient?: AuthClient) => Promise<void>;
export {};
//# sourceMappingURL=storage.d.ts.map