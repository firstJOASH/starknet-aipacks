import { GetWalletOptions } from '@starknet-io/get-starknet-core';
import { ArgentMobileConnectorOptions } from '../connectors/argent/argentMobile';
import { StarknetWindowObject } from '@starknet-io/types-js';
import { Connector, ConnectorData, ConnectorIcons, StarknetkitCompoundConnector, StarknetkitConnector } from '../connectors';

export type StoreVersion = "chrome" | "firefox" | "edge";
export type Theme = "dark" | "light" | null;
export declare enum Layout {
    walletList = "walletList",
    connecting = "connecting",
    success = "success",
    loginFailure = "loginFailure",
    requestFailure = "requestFailure",
    qrCode = "qrCode",
    download = "download",
    approval = "approval"
}
export interface ConnectOptions extends GetWalletOptions {
    dappName?: string;
    modalMode?: "alwaysAsk" | "canAsk" | "neverAsk";
    modalTheme?: "light" | "dark" | "system";
    storeVersion?: StoreVersion | null;
    resultType?: "connector" | "wallet";
    webWalletUrl?: string;
    argentMobileOptions: ArgentMobileConnectorOptions;
    skipEmit?: boolean;
}
export interface ConnectOptionsWithConnectors extends Omit<ConnectOptions, "webWalletUrl" | "argentMobileOptions"> {
    connectors?: (Connector | StarknetkitConnector)[];
}
export type ModalWallet = {
    name: string;
    id: string;
    icon: ConnectorIcons;
    installed: boolean;
    download?: string;
    downloads?: Record<string, string>;
    subtitle?: string;
    title?: string;
    connector: Connector | StarknetkitConnector | StarknetkitCompoundConnector;
};
export type Callback = (value: ModalWallet | null, useFallback?: boolean) => Promise<void>;
export type ModalResult = {
    connector: StarknetkitConnector | null;
    connectorData: ConnectorData | null;
    wallet?: StarknetWindowObject | null;
};
