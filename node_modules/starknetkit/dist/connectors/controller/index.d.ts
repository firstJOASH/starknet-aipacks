import { ProviderOptions, ProviderInterface, AccountInterface } from 'starknet';
import { RequestFnCall, RpcMessage, RpcTypeToMessageMap, StarknetWindowObject } from '@starknet-io/types-js';
import { ControllerOptions } from '@cartridge/controller';
import { Connector, ConnectArgs, ConnectorData } from '../connector';

export declare class ControllerConnector extends Connector {
    private controller;
    constructor(options?: Partial<ControllerOptions>);
    get id(): string;
    get name(): string;
    get icon(): {
        light: string;
        dark: string;
    };
    available(): boolean;
    ready(): Promise<boolean>;
    connect(_args?: ConnectArgs): Promise<ConnectorData>;
    disconnect(): Promise<void>;
    account(_provider: ProviderOptions | ProviderInterface): Promise<AccountInterface>;
    chainId(): Promise<bigint>;
    request<T extends RpcMessage["type"]>(call: RequestFnCall<T>): Promise<RpcTypeToMessageMap[T]["result"]>;
    get wallet(): StarknetWindowObject;
}
