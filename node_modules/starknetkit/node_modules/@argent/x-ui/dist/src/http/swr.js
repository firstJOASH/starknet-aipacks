import { useEffect as f } from "react";
import i, { useSWRConfig as l } from "swr";
const u = (e) => ({
  refreshInterval: e,
  dedupingInterval: e
}), h = (e) => `${e.networkId}::${e.address}`, a = () => {
};
function v(e, t, r, s) {
  const { cache: o } = l(), n = i(e && t, e ? r : a, s);
  return f(() => {
    e || (n.mutate(), o.delete(t));
  }, [e]), n;
}
const g = {
  revalidateOnFocus: !1,
  revalidateOnMount: !0,
  revalidateOnReconnect: !1,
  refreshWhenOffline: !1,
  refreshWhenHidden: !1,
  refreshInterval: 0
};
export {
  h as getAccountIdentifier,
  g as swrRefetchDisabledConfig,
  v as useConditionallyEnabledSWR,
  u as withPolling
};
