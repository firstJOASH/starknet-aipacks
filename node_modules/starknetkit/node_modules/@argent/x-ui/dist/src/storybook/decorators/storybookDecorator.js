import { jsxs as l, Fragment as c, jsx as e } from "react/jsx-runtime";
import { theme as i } from "../../features/theme/theme.js";
import { theme as d } from "../../features/theme/theme.web.js";
import { theme as h } from "../../features/theme/theme.mobile.js";
import { ChakraProvider as n } from "@chakra-ui/react";
import { useEffect as f } from "react";
import { StorybookColorModeLayout as y } from "../ui/StorybookColorModeLayout.js";
import { StorybookGlobalLayout as p } from "../ui/StorybookGlobalLayout.js";
const j = b();
function b(r = n) {
  return (t, m) => {
    const { parameters: s, globals: o } = m, a = o.theme === "web" ? d : o.theme === "mobile" ? h : i;
    return f(() => {
      document.body.classList.remove("light", "dark"), document.body.classList.add(o.colorMode, "bg-surface-default");
    }, [o.colorMode]), /* @__PURE__ */ l(c, { children: [
      /* @__PURE__ */ e("link", { href: "https://fonts.googleapis.com/css2?family=Barlow:wght@400;500;600;700;900&display=swap", rel: "stylesheet" }),
      /* @__PURE__ */ e(r, { theme: a, children: /* @__PURE__ */ e(y, { colorMode: o.colorMode, children: /* @__PURE__ */ e(p, { layout: s.layout, children: /* @__PURE__ */ e(t, {}) }) }) })
    ] });
  };
}
export {
  b as makeStorybookDecorator,
  j as storybookDecorator
};
