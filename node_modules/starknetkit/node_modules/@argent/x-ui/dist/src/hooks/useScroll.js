import { useRef as i, useState as a, useCallback as n } from "react";
import { getScroll as u } from "./getScroll.js";
const R = ({ onScroll: c } = {}) => {
  const r = i(null), [f, o] = a({
    scrollTop: 0,
    scrollLeft: 0
  }), s = n((e) => {
    if (!e.currentTarget)
      return;
    const { scrollTop: t, scrollLeft: l } = u(e.currentTarget);
    o({ scrollTop: t, scrollLeft: l }), c && c({ scrollTop: t, scrollLeft: l });
  }, [c]);
  return {
    scrollRef: n((e) => {
      if (r != null && r.current && r.current.removeEventListener("scroll", s), r.current = e, r != null && r.current) {
        const { scrollTop: t, scrollLeft: l } = u(r.current);
        o({ scrollTop: t, scrollLeft: l }), r.current.addEventListener("scroll", s, {
          passive: !0
        });
      }
    }, [s]),
    useScrollRef: r,
    scroll: f
  };
};
export {
  R as useScroll
};
