import { jsx as o, jsxs as g } from "react/jsx-runtime";
import l from "../features/icons/InfoCirclePrimaryIcon.js";
import u from "../features/icons/PendingPrimaryIcon.js";
import p from "../features/icons/SuccessSecondaryIcon.js";
import i from "../features/icons/WarningCircleSecondaryIcon.js";
import { useToast as b, Flex as x, Text as C } from "@chakra-ui/react";
import { merge as I } from "lodash-es";
import { useCallback as T } from "react";
import { L1Bold as P } from "../components/typography.generated.js";
const h = {
  info: /* @__PURE__ */ o(l, {}),
  warning: /* @__PURE__ */ o(i, {}),
  success: /* @__PURE__ */ o(p, {}),
  error: /* @__PURE__ */ o(i, {}),
  loading: /* @__PURE__ */ o(u, {})
}, s = {
  info: { bg: "surface-info-default", icon: "icon-info" },
  warning: { bg: "surface-elevated", icon: "icon-background-brand" },
  success: { bg: "surface-success-default", icon: "icon-success" },
  error: { bg: "surface-danger-default", icon: "icon-danger" },
  loading: { bg: "surface-elevated", icon: "pending" }
}, R = (r) => {
  const e = b(r);
  return T((t) => {
    const n = I({}, r, t), { title: a, status: c = "info" } = n, m = n.icon || h[c], d = s[c].bg, f = s[c].icon;
    return e({ render: () => /* @__PURE__ */ g(x, { alignItems: "center", p: 3, gap: 3, borderRadius: "lg", backgroundColor: d, children: [
      /* @__PURE__ */ o(C, { fontSize: "2xl", color: f, children: m }),
      /* @__PURE__ */ o(P, { textTransform: "initial", children: a })
    ] }), ...n });
  }, [e, r]);
};
export {
  R as useToast
};
