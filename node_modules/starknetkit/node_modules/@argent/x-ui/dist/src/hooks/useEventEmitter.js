import { jsx as E } from "react/jsx-runtime";
import { noop as m } from "lodash-es";
import { useContext as c, createContext as v, useEffect as f } from "react";
const o = v(null), i = () => c(o), x = () => {
  var t;
  return !!((t = i()) != null && t.emitter);
}, a = ({ emitter: t, children: r }) => /* @__PURE__ */ E(o.Provider, { value: {
  emitter: t
}, children: r });
let s = !1;
const u = () => {
  var e;
  const t = (e = i()) == null ? void 0 : e.emitter;
  if (!t && !s) {
    s = !0;
    return;
  }
  return t;
}, C = () => {
  const t = u();
  return t ? t.emit.bind(t) : m;
}, L = () => {
  const t = u();
  return (e, n) => {
    f(() => t ? t.on(e, n) : void 0, [e, n]);
  };
};
export {
  a as EventEmitterProvider,
  C as useEmitEvent,
  u as useEventEmitter,
  i as useEventEmitterContext,
  L as useEventListener,
  x as useIsEventEmitterEnabled
};
