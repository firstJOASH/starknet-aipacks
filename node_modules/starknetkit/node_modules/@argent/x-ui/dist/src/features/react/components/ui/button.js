import { jsx as a } from "react/jsx-runtime";
import { Slot as s } from "@radix-ui/react-slot";
import { cva as u } from "class-variance-authority";
import * as b from "react";
import { cn as f } from "../../../tailwind/lib/utils.js";
const l = u("ring-offset-background focus-visible:ring-ring inline-flex flex-row items-center justify-center gap-1 whitespace-nowrap rounded-full transition-colors duration-100 focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50", {
  variants: {
    variant: {
      default: "bg-button-primary text-stable hover:bg-button-primary-hover",
      secondary: "bg-button-secondary text-primary hover:bg-button-secondary-hover",
      tertiary: "bg-button-tertiary text-primary hover:bg-button-tertiary-hover",
      destructive: "bg-button-danger text-stable hover:bg-button-danger-hover",
      outline: "border-input hover:text-accent-foreground border bg-surface-default hover:bg-surface-elevated"
    },
    size: {
      icon: "h-12 w-12",
      default: "min-h-12 px-8 text-b1",
      medium: "min-h-8 px-3 text-b2",
      small: "min-h-[26px] px-3 text-b3"
    }
  },
  defaultVariants: {
    variant: "default",
    size: "default"
  }
}), d = b.forwardRef(({ className: t, variant: e, size: r, asChild: o = !1, ...n }, i) => /* @__PURE__ */ a(o ? s : "button", { className: f(l({ variant: e, size: r, className: t })), ref: i, ...n }));
d.displayName = "Button";
export {
  d as Button,
  l as buttonVariants
};
