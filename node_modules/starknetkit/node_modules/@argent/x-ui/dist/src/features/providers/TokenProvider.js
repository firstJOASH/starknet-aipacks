import { jsx as r } from "react/jsx-runtime";
import { useContext as k, createContext as T, useMemo as c } from "react";
const t = T({
  useToken: () => {
  },
  useTokenInfo: () => {
  }
}), s = () => k(t), x = (n) => {
  var o, e;
  return (e = (o = s()) == null ? void 0 : o.useToken) == null ? void 0 : e.call(o, n);
}, m = (n) => {
  var o, e;
  return (e = (o = s()) == null ? void 0 : o.useTokenInfo) == null ? void 0 : e.call(o, n);
}, v = ({ useToken: n, useTokenInfo: o, children: e }) => {
  const u = c(() => ({ useToken: n, useTokenInfo: o }), [n, o]);
  return /* @__PURE__ */ r(t.Provider, { value: u, children: e });
};
export {
  v as TokenProvider,
  x as useToken,
  m as useTokenInfo
};
