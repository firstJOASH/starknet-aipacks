import { menuAnatomy as s } from "@chakra-ui/anatomy";
import { createMultiStyleConfigHelpers as l } from "@chakra-ui/react";
import { mode as r } from "@chakra-ui/theme-tools";
import { buttonHoverStyle as a, buttonBaseStyle as d } from "./buttonTheme.js";
const { definePartsStyle: i, defineMultiStyleConfig: b } = l(s.keys), h = {
  "2xs": i({
    button: {
      minHeight: 8,
      fontSize: "sm"
    },
    item: {
      minHeight: 8,
      fontSize: "sm"
    }
  })
}, u = i({
  button: {
    fontWeight: "bold"
  },
  list: {
    py: 0,
    borderRadius: "xl",
    border: "none",
    overflow: "hidden",
    boxShadow: "menu"
  },
  item: {
    p: 3,
    transitionProperty: "box-shadow",
    transitionDuration: "ultra-fast",
    fontWeight: "bold",
    bg: "surface-elevated",
    color: "text-primary",
    boxShadow: d.boxShadow,
    _hover: {
      boxShadow: a.boxShadow
    },
    _focus: {
      boxShadow: a.boxShadow
    },
    ".chakra-menu__icon-wrapper": {
      fontSize: "inherit"
    }
  }
}), m = i((o) => {
  const { colorScheme: t } = o, e = t === "dark" ? "white" : r("neutrals.700", "white")(o), n = t === "dark" ? "neutrals.900" : r("white", "neutrals.900")(o);
  return {
    button: {
      fontWeight: "bold"
    },
    list: {
      py: 3,
      borderRadius: "xl",
      border: "none",
      bgColor: n,
      overflow: "hidden",
      boxShadow: " 0px 4px 30px 0px rgba(0, 0, 0, 0.1);"
    },
    item: {
      p: 3,
      fontWeight: "bold",
      bgColor: n,
      color: e,
      _hover: {
        color: e,
        bg: t === "dark" ? "neutrals.700" : r("neutrals.200", "neutrals.700")(o)
      },
      _focus: {
        color: e,
        bgColor: n
      },
      ".chakra-menu__icon-wrapper": {
        fontSize: "inherit"
      }
    }
  };
}), f = {
  web: m
}, p = b({
  baseStyle: u,
  sizes: h,
  variants: f,
  defaultProps: {
    size: "2xs"
  }
});
export {
  p as menuTheme
};
