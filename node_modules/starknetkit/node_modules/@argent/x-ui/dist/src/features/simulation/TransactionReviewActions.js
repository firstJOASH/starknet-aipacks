import { jsx as r } from "react/jsx-runtime";
import { getHighestSeverity as g } from "@argent/x-shared/simulation";
import { Flex as l } from "@chakra-ui/react";
import { isEmpty as u } from "lodash-es";
import { TransactionReviewAction as h } from "./TransactionReviewAction.js";
import { riskToSemanticTokenMap as y } from "../../utilities/riskToSemanticTokenMap.js";
const $ = ({ reviewOfTransaction: o, initiallyExpanded: p, networkId: n }) => u(o == null ? void 0 : o.reviews) ? null : /* @__PURE__ */ r(l, { direction: "column", gap: 1, children: o == null ? void 0 : o.reviews.map((t, s) => {
  var i;
  const e = t.warnings ?? [], m = (i = g(e)) == null ? void 0 : i.severity, c = m ? y[m] : void 0;
  return /* @__PURE__ */ r(h, { action: t.action, initiallyExpanded: p, semanticColor: c, networkId: n }, `review-${s}-${t.action.name}`);
}) });
export {
  $ as TransactionReviewActions
};
