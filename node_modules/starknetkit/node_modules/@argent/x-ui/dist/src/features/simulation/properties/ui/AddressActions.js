import { jsxs as x, jsx as o } from "react/jsx-runtime";
import d from "../../../icons/CopyPrimaryIcon.js";
import f from "../../../icons/ExpandIcon.js";
import { useBlockExplorerTitle as h, useBlockExplorerOnOpenAddress as v, useBlockExplorerOnOpenTransaction as y } from "../../../providers/BlockExplorerProvider.js";
import { Flex as O, Button as c, Tooltip as k } from "@chakra-ui/react";
import { useCallback as b } from "react";
import { useTranslation as E } from "react-i18next";
import { CopyTooltip as T } from "../../../../components/CopyTooltip.js";
const D = ({ address: r, networkId: e, isTransaction: t = !1, openInBlockExplorer: l = !0, ...i }) => {
  const { t: a } = E(), s = h(), n = v(), p = y(), m = b(() => t ? void p({ networkId: e, hash: r }) : void n({ networkId: e, address: r }), [
    r,
    n,
    p,
    t,
    e
  ]);
  return /* @__PURE__ */ x(O, { gap: "1", alignItems: "center", opacity: 0, transitionProperty: "common", transitionDuration: "fast", _groupHover: { opacity: 1 }, onClick: (u) => {
    u.stopPropagation();
  }, ...i, children: [
    /* @__PURE__ */ o(T, { copyValue: r, placement: "top", children: /* @__PURE__ */ o(c, { size: "auto", color: "text-secondary", p: 0.5, rounded: "sm", _hover: {
      color: "text-primary",
      bg: "surface-elevated-hover"
    }, children: /* @__PURE__ */ o(d, {}) }) }),
    l && /* @__PURE__ */ o(k, { label: a("receiveToken.viewOn", { blockExplorerTitle: s }), placement: "top", children: /* @__PURE__ */ o(c, { onClick: m, size: "auto", color: "text-secondary", p: 0.5, rounded: "sm", _hover: {
      color: "text-primary",
      bg: "surface-elevated-hover"
    }, children: /* @__PURE__ */ o(f, {}) }) })
  ] });
};
export {
  D as AddressActions
};
