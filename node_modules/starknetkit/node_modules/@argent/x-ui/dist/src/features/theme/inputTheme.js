import { inputAnatomy as n } from "@chakra-ui/anatomy";
import { createMultiStyleConfigHelpers as t, defineStyle as l } from "@chakra-ui/styled-system";
import { mode as o } from "@chakra-ui/theme-tools";
const { definePartsStyle: i, defineMultiStyleConfig: a } = t(n.keys), d = i({
  field: {
    /** placeholder */
  }
}), b = i((e) => ({
  field: {
    bg: o("white", "black")(e),
    border: "1px solid",
    borderColor: "border",
    _placeholder: {
      color: o("gray.200", "neutrals.500")(e)
    },
    _hover: {
      borderColor: o("gray.100", "neutrals.600")(e)
    },
    _invalid: {
      borderColor: "error.500",
      boxShadow: o("inherit", "none")(e),
      _hover: {
        borderColor: o("error.400", "error.600")(e)
      },
      _focusVisible: {
        borderColor: "error.500",
        boxShadow: o("outline-error", "none")(e)
      }
    },
    _focusVisible: {
      borderColor: o("accent.500", "neutrals.400")(e),
      boxShadow: o("outline-accent", "none")(e)
    }
  }
})), s = i((e) => ({
  field: {
    bg: o("gray.50", "neutrals.800")(e),
    border: "none",
    _placeholder: {
      color: o("gray.300", "neutrals.400")(e)
    },
    _hover: {
      bg: o("gray.100", "neutrals.700")(e)
    },
    _invalid: {
      boxShadow: "error",
      _focusVisible: {
        boxShadow: o("outline-error", "error")(e)
      }
    },
    _focusVisible: {
      bg: o("white", "neutrals.700")(e),
      boxShadow: o("outline-accent", "none")(e)
    }
  }
})), u = i((e) => ({
  field: {
    bg: o("gray.50", "neutrals.800")(e),
    border: "none",
    _placeholder: {
      color: o("gray.300", "neutrals.400")(e)
    },
    _hover: {
      bg: o("gray.100", "neutrals.800")(e)
    },
    _invalid: {
      boxShadow: "error",
      _focusVisible: {
        boxShadow: o("outline-error", "error")(e)
      }
    },
    _focusVisible: {
      bg: o("white", "neutrals.800")(e),
      boxShadow: o("outline-accent", "none")(e)
    }
  }
})), c = {
  outline: b,
  filled: s,
  flat: u
}, r = {
  md: l({
    px: "5",
    py: "4.5",
    fontSize: "base",
    fontWeight: "semibold",
    borderRadius: "lg",
    minHeight: "14"
  }),
  sm: l({
    px: "3",
    py: "3.5",
    fontSize: "base",
    fontWeight: "semibold",
    borderRadius: "lg",
    minHeight: "12",
    h: "10"
  }),
  pill: l({
    px: "4",
    py: "1",
    fontSize: "sm",
    fontWeight: "semibold",
    borderRadius: "full",
    minHeight: "8",
    textAlign: "right"
  })
}, f = {
  md: i({
    field: r.md,
    addon: r.md,
    element: l({
      ...r.md,
      px: void 0
    })
  }),
  sm: i({
    field: r.sm,
    addon: r.sm,
    element: l({
      ...r.sm,
      px: void 0
    })
  }),
  pill: i({
    field: r.pill,
    addon: r.pill,
    element: l({
      ...r.pill,
      px: void 0
    })
  })
}, x = a({
  baseStyle: d,
  variants: c,
  sizes: f,
  defaultProps: {
    size: "md",
    variant: "outline"
  }
});
export {
  d as baseStyle,
  x as inputTheme,
  r as size,
  s as variantFilled,
  u as variantFlat,
  b as variantOutline
};
