import { jsx as e, jsxs as v } from "react/jsx-runtime";
import { Flex as g } from "@chakra-ui/react";
import { upperFirst as x } from "lodash-es";
import { useMemo as D } from "react";
import { useTranslation as F } from "react-i18next";
import { Hideable as V } from "../Hideable.js";
import { TokenAndAmountValue as k } from "../../properties/ui/TokenAndAmountValue.js";
import { DappValue as y } from "../../properties/ui/DappValue.js";
import { HashValue as j } from "../../properties/ui/HashValue.js";
import { LabelValueStack as H, LabelValueRow as l } from "../../../../components/LabelValue.js";
const E = ({ activity: t, networkId: i, hideComponent: c }) => {
  const { t: a } = F(), { status: r, transaction: f, dapp: n } = t, s = D(() => {
    var p;
    if (!("fees" in t))
      return null;
    const o = (p = t.fees) == null ? void 0 : p.find((b) => b.type === "gas");
    if (!o || !o.actualFee)
      return null;
    const { actualFee: h } = o, { amount: u, fiatAmount: m, tokenAddress: d } = h;
    return u && m && d ? /* @__PURE__ */ e(k, { tokenAddress: d, amount: u, fiatAmount: m, networkId: i }) : null;
  }, [t, i]), A = r === "failure" ? "Reverted" : x(r);
  return /* @__PURE__ */ v(H, { p: 3, rounded: "lg", bg: "surface-elevated", children: [
    n && /* @__PURE__ */ e(l, { label: a("activityAdditionalDetails.dapp"), value: /* @__PURE__ */ e(y, { dapp: n }) }),
    s && /* @__PURE__ */ e(l, { label: a("activityAdditionalDetails.networkFee"), value: /* @__PURE__ */ e(g, { ml: "auto", textAlign: "right", alignItems: "center", children: /* @__PURE__ */ e(V, { hideComponent: c, children: s }) }) }),
    /* @__PURE__ */ e(l, { label: a("activityAdditionalDetails.txStatus"), value: A }),
    /* @__PURE__ */ e(l, { label: a("activityAdditionalDetails.txDetails"), value: /* @__PURE__ */ e(j, { hash: f.hash, networkId: i }) })
  ] });
};
export {
  E as ActivityAdditionalDetails
};
