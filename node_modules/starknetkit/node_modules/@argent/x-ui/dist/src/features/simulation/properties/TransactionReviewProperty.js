import { jsx as e } from "react/jsx-runtime";
import { useMemo as m } from "react";
import { AddressProperty as o } from "./AddressProperty.js";
import { AmountProperty as l } from "./AmountProperty.js";
import { CallDataProperty as i } from "./CallDataProperty.js";
import { ClassHashProperty as c } from "./ClassHashProperty.js";
import { TextProperty as u } from "./TextProperty.js";
import { TimeStampProperty as f } from "./TimeStampProperty.js";
import { TokenAddressProperty as n } from "./TokenAddressProperty.js";
import { Label as P } from "../../../components/Label.js";
import { LabelValueRow as b } from "../../../components/LabelValue.js";
const C = ({ property: r, networkId: a, hideComponent: t }) => {
  const s = m(() => {
    switch (r.type) {
      case "amount":
        return /* @__PURE__ */ e(l, { property: r, hideComponent: t });
      case "address":
        return /* @__PURE__ */ e(o, { property: r, networkId: a });
      case "token_address":
      case "nft":
        return /* @__PURE__ */ e(n, { property: r, networkId: a });
      case "calldata":
        return /* @__PURE__ */ e(i, { property: r });
      case "text":
        return /* @__PURE__ */ e(u, { property: r });
      case "timestamp":
        return /* @__PURE__ */ e(f, { property: r });
      case "class_hash":
        return /* @__PURE__ */ e(c, { property: r, networkId: a });
    }
  }, [t, a, r]);
  return /* @__PURE__ */ e(b, { label: /* @__PURE__ */ e(P, { label: r.label }), value: s });
};
export {
  C as TransactionReviewProperty
};
