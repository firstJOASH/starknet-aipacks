import { defineStyleConfig as i } from "@chakra-ui/react";
import { defineStyle as r } from "@chakra-ui/styled-system";
import { mode as o } from "@chakra-ui/theme-tools";
const n = r({
  transitionProperty: "common",
  transitionDuration: "normal"
}), t = r((e) => ({
  bg: o("white", "black")(e),
  border: "1px solid",
  borderColor: "border",
  _placeholder: {
    color: o("gray.200", "neutrals.500")(e)
  },
  _hover: {
    borderColor: o("gray.100", "neutrals.600")(e)
  },
  _invalid: {
    borderColor: "error.500",
    boxShadow: o("inherit", "none")(e),
    _hover: {
      borderColor: o("error.400", "error.600")(e)
    },
    _focusVisible: {
      borderColor: "error.500",
      boxShadow: o("outline-error", "none")(e)
    }
  },
  _focusVisible: {
    borderColor: o("accent.500", "neutrals.400")(e),
    boxShadow: o("outline-accent", "none")(e)
  }
})), l = r((e) => ({
  bg: o("gray.50", "neutrals.800")(e),
  border: "none",
  _placeholder: {
    color: o("gray.300", "neutrals.400")(e)
  },
  _hover: {
    bg: o("gray.100", "neutrals.700")(e)
  },
  _invalid: {
    boxShadow: "error",
    _focusVisible: {
      boxShadow: o("outline-error", "error")(e)
    }
  },
  _focusVisible: {
    bg: o("white", "neutrals.700")(e),
    boxShadow: o("outline-accent", "none")(e)
  }
})), a = {
  outline: t,
  filled: l
}, d = {
  md: {
    px: "5",
    py: "4.5",
    fontSize: "base",
    fontWeight: "semibold",
    borderRadius: "lg",
    minHeight: "14",
    h: "initial"
  },
  sm: r({
    px: "3",
    py: "3.5",
    fontSize: "base",
    fontWeight: "semibold",
    borderRadius: "lg",
    minHeight: "12",
    h: "10"
  })
}, u = i({
  baseStyle: n,
  sizes: d,
  variants: a,
  defaultProps: {
    size: "md",
    variant: "outline"
  }
});
export {
  u as textareaTheme
};
