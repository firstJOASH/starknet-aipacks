import { jsx as c } from "react/jsx-runtime";
import { forwardRef as z, useMemo as i } from "react";
import { Virtuoso as G } from "react-virtuoso";
import { ActivityListSubtitlePending as N } from "./ActivityListSubtitlePending.js";
import { ITEM_TYPE as P } from "./types.js";
import { getActivityItemData as T } from "./utils/getActivityItemData.js";
import { getGroupedItemData as _ } from "./utils/getGroupedItemData.js";
import { VirtualizedActivityListItem as B } from "./VirtualizedActivityListItem.js";
import { getPartitionedActivities as M } from "./utils/getPartitionedActivities.js";
import { getGroupedActivitiesByDate as j } from "./utils/getGroupedActivitiesByDate.js";
const F = (m, e, r) => /* @__PURE__ */ c(B, { data: e, ...r }), H = z(({ activities: m, networkId: e, onActivityClick: r, header: a, footer: d, RowWrapper: p, SubTitleWrapper: f, hideComponent: l, rowProps: g, components: x, locales: I, ...h }, L) => {
  const E = i(() => ({
    ...x,
    Header: () => a,
    Footer: () => d
  }), [x, a, d]), [t, v] = i(() => M(m), [m]), A = i(() => j(v, I), [v, I]), D = i(() => t.length ? /* @__PURE__ */ c(N, { count: t.length }) : null, [t]), V = i(() => {
    const n = [];
    let o = 0, s = 0;
    if (t.length) {
      n.push({
        type: P.SUBTITLE_PENDING,
        index: s++
      });
      const y = T({
        activities: t,
        itemIndex: o
      });
      o = y.itemIndex, n.push(...y.itemData);
    }
    const u = _({
      groupedActivities: A,
      itemIndex: o,
      subtitleIndex: s
    });
    return n.push(...u.itemData), o = u.itemIndex, s = u.subtitleIndex, n;
  }, [A, t]), b = i(() => ({
    RowWrapper: p,
    SubTitleWrapper: f,
    networkId: e,
    onActivityClick: r,
    rowProps: g,
    subtitlePending: D,
    hideComponent: l
  }), [
    p,
    f,
    e,
    r,
    g,
    D,
    l
  ]);
  return /* @__PURE__ */ c(G, { ref: L, data: V, context: b, itemContent: F, components: E, ...h });
});
H.displayName = "VirtualizedActivityList";
export {
  H as VirtualizedActivityList
};
