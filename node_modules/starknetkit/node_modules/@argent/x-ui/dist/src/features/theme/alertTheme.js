import { alertAnatomy as i } from "@chakra-ui/anatomy";
import { createMultiStyleConfigHelpers as l } from "@chakra-ui/react";
import { mode as r } from "@chakra-ui/theme-tools";
import { typographyStyles as n } from "./typographyStyles.generated.js";
const { definePartsStyle: t, defineMultiStyleConfig: c } = l(i.keys), s = t((o) => {
  const { colorScheme: e } = o;
  return {
    container: {
      display: "flex",
      alignItems: "center"
    },
    icon: {
      rounded: "full",
      bg: `${e}.500`,
      color: r(`${e}.100`, `${e}.900`)(o),
      fontSize: "base",
      w: 9,
      h: 9,
      alignItems: "center",
      justifyContent: "center"
    },
    title: {
      ...n.L1Bold,
      letterSpacing: "normal"
    },
    description: {
      display: "block",
      ...n.L1
    }
  };
}), a = {
  subtle: t((o) => {
    const { colorScheme: e } = o;
    return {
      container: {
        bg: r(`${e}.100`, `${e}.900`)(o)
      },
      description: {
        color: "white.50"
      }
    };
  }),
  info: t(() => ({
    container: {
      border: "1px solid",
      borderColor: "white.30"
    },
    title: {
      color: "neutrals.300",
      margin: 0
    }
  })),
  solid: t((o) => {
    const { colorScheme: e } = o;
    return {
      container: {
        bg: `${e}.500`
      },
      description: {
        color: "black.50"
      }
    };
  })
}, d = {
  base: t({
    container: {
      px: 3,
      py: 3,
      rounded: "base"
    }
  }),
  sm: t({
    container: {
      p: 3,
      rounded: "lg"
    },
    title: {
      fontSize: "13px",
      fontWeight: 400,
      lineHeight: 4
    }
  }),
  md: t({
    container: {
      py: "13px",
      px: 4,
      rounded: "xl"
    },
    title: {
      fontSize: "md",
      fontWeight: "bold",
      lineHeight: 5
    },
    description: {
      ...n.P3
    }
  }),
  lg: t({
    container: {
      p: 4,
      rounded: "xl"
    },
    title: {
      ...n.H5
    },
    description: {
      ...n.L1Bold,
      color: "white.50"
    }
  })
}, u = c({
  baseStyle: s,
  variants: a,
  sizes: d,
  defaultProps: {
    size: "base",
    variant: "subtle",
    colorScheme: "warning"
  }
});
export {
  u as alertTheme
};
