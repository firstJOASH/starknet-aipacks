import { jsx as t } from "react/jsx-runtime";
import { memo as E } from "react";
import { ActivityRow as T } from "../row/ActivityRow.js";
import { ITEM_TYPE as c } from "./types.js";
import { HeaderCell as d } from "../../../../components/CellStack.js";
const L = ({ data: e, networkId: l, onActivityClick: o, subtitlePending: I, hideComponent: f, RowWrapper: m, SubTitleWrapper: i, rowProps: r }) => {
  switch (e.type) {
    case c.ACTIVITY: {
      const n = e.activity, s = {
        activity: n,
        networkId: l,
        onClick: () => o == null ? void 0 : o(n)
      }, h = r ? r({ ...s, index: e.index }) : s, x = /* @__PURE__ */ t(T, { ...h, hideComponent: f });
      return m ? /* @__PURE__ */ t(m, { index: e.index, children: x }) : x;
    }
    case c.SUBTITLE: {
      const n = /* @__PURE__ */ t(d, { children: e.text });
      return i ? /* @__PURE__ */ t(i, { index: e.index, children: n }) : n;
    }
    case c.SUBTITLE_PENDING: {
      const n = /* @__PURE__ */ t(d, { children: I });
      return i ? /* @__PURE__ */ t(i, { index: e.index, children: n }) : n;
    }
  }
  e.type;
}, N = E(L);
export {
  N as VirtualizedActivityListItem
};
