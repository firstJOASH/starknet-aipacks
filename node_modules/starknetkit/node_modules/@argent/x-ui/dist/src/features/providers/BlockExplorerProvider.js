import { jsx as l } from "react/jsx-runtime";
import { noop as n } from "lodash-es";
import { useContext as c, createContext as p, useMemo as x } from "react";
const t = p({
  useBlockExplorer: () => ({
    title: "",
    onOpenAddress: n,
    onOpenTransaction: n
  })
}), u = () => c(t), r = () => {
  var o, e;
  return (e = (o = u()) == null ? void 0 : o.useBlockExplorer) == null ? void 0 : e.call(o);
}, E = () => {
  var o;
  return (o = r()) == null ? void 0 : o.title;
}, a = () => {
  var o;
  return (o = r()) == null ? void 0 : o.onOpenAddress;
}, d = () => {
  var o;
  return (o = r()) == null ? void 0 : o.onOpenTransaction;
}, O = ({ useBlockExplorer: o, children: e }) => {
  const s = x(() => ({ useBlockExplorer: o }), [o]);
  return /* @__PURE__ */ l(t.Provider, { value: s, children: e });
};
export {
  O as BlockExplorerProvider,
  r as useBlockExplorer,
  a as useBlockExplorerOnOpenAddress,
  d as useBlockExplorerOnOpenTransaction,
  E as useBlockExplorerTitle
};
