import { jsx as t, jsxs as c, Fragment as V } from "react/jsx-runtime";
import { prettifyTokenAmount as W } from "../../../node_modules/.pnpm/@argent_x-shared@1.73.0_@scure_base@1.2.4_@scure_bip39@1.5.4_async-retry@1.3.3_lodash-e_b34e798a09d95058b17e0b32da902dbd/node_modules/@argent/x-shared/dist/src/tokens/prettifyTokenAmount.js";
import { prettifyCurrencyNumber as _, prettifyNumber as q } from "../../../node_modules/.pnpm/@argent_x-shared@1.73.0_@scure_base@1.2.4_@scure_bip39@1.5.4_async-retry@1.3.3_lodash-e_b34e798a09d95058b17e0b32da902dbd/node_modules/@argent/x-shared/dist/src/utils/number/prettifyNumber.js";
import { minimumAmountOutFromTrade as H } from "@argent/x-shared/swap";
import K from "../icons/FilterSecondaryIcon.js";
import { useDisclosure as A, Flex as y, Spinner as O, Button as Q } from "@chakra-ui/react";
import { useMemo as S } from "react";
import { useTranslation as z } from "react-i18next";
import { CompoundInputDeprecated as N } from "../../components/CompoundInputDeprecated/index.js";
import { SwapDetails as D } from "./SwapDetails.js";
import { SwapSwitchDirectionButton as G } from "./SwapSwitchDirectionButton.js";
import { SwapInputError as P } from "./types.js";
import { CompoundDialogBottomSheet as v } from "../../components/CompoundDialogBottomSheet/index.js";
import { CompoundInput as F } from "../../components/CompoundInput/index.js";
import { formatUnits as x } from "../../../node_modules/.pnpm/@argent_x-shared@1.73.0_@scure_base@1.2.4_@scure_bip39@1.5.4_async-retry@1.3.3_lodash-e_b34e798a09d95058b17e0b32da902dbd/node_modules/@argent/x-shared/dist/src/bigdecimal/formatUnits.js";
import { P3 as J } from "../../components/typography.generated.js";
function fe({ assetSelect: a, slippage: r, pay: m, receive: s, onSwitchTokens: B, error: f, isDisabled: M, showDetails: $, trade: e, isLoadingTrade: u, submitButton: h = { show: !0, type: "submit" } }) {
  var T;
  const { t: n } = z(), w = ((T = r.options) == null ? void 0 : T.multiplier) || 100, { isOpen: E, onOpen: k, onClose: I } = A(), { isOpen: R, onOpen: b, onClose: d } = A(), [U, p] = S(function() {
    if (e) {
      const o = x({
        value: BigInt(e.payAmount),
        decimals: e.payToken.decimals ?? 18
      }), i = x({
        value: BigInt(e.receiveAmount),
        decimals: e.receiveToken.decimals ?? 18
      }), C = _(Number(i) / Number(o));
      let l = !!(e.payAmountInCurrency && e.receiveAmountInCurrency && Number(e.payAmountInCurrency) !== 0 && Number(e.receiveAmountInCurrency) !== 0) ? (Number(e.payAmountInCurrency) - Number(e.receiveAmountInCurrency)) / Number(e.receiveAmountInCurrency) * 100 : null;
      return l = l === null || l === 0 ? l : l * -1, [C, l];
    }
    return [null, null];
  }, [e]), g = S(function() {
    var o;
    if (e) {
      const { value: i, decimals: C } = H(e, r.value);
      return W({
        amount: i,
        decimals: C,
        symbol: (o = e.receiveToken) == null ? void 0 : o.symbol
      });
    }
  }, [e, r]), j = S(function() {
    if (e) {
      const o = [
        {
          property: n("swap.swapFee"),
          value: `${e.totalFeePercentage * 100}%`
        },
        {
          property: n("swap.minReceivedInclFees"),
          value: `${g}`
        },
        {
          property: n("swap.maxSlippage"),
          value: (r.value / w).toString(),
          buttonProps: {
            icon: /* @__PURE__ */ t(K, {}),
            "aria-label": "some label",
            onClick: b
          },
          alert: r.value / w > 1 ? n("swap.yourTransactionMayBeFrontrunAndResultInAnUnfavorableTrade") : ""
        },
        {
          property: n("swap.providers"),
          value: e.route.name
        }
      ];
      return p ? o.push({
        property: n("swap.priceImpact"),
        value: `${q(p)}%`,
        alert: p && p < -1 ? n("swap.yourTradeWillHaveASignificantImpactOnThePrice") : ""
      }) : e && p === null && o.push({
        property: n("swap.priceImpact"),
        value: "",
        alert: n("swap.noPriceFoundCannotDeterminePriceImpact")
      }), o;
    }
    return [];
  }, [
    e,
    g,
    r.value,
    w,
    b,
    p,
    n
  ]);
  return /* @__PURE__ */ c(V, { children: [
    /* @__PURE__ */ t(v, { isOpen: E, onClose: () => I(), bottomSheetProps: {
      expandOnContentDrag: !0,
      snapPoints: ({ maxHeight: o }) => [
        o - (a.bottomSheetTopMargin ?? 80) / 2
      ]
    }, children: /* @__PURE__ */ t(v.SelectAsset, { loading: a.loading, tokens: a.tokens, onSelect: (o) => {
      a.onSelect(o), I();
    } }) }),
    /* @__PURE__ */ t(v, { isOpen: R, onClose: () => d(), bottomSheetProps: {
      expandOnContentDrag: !0
    }, children: /* @__PURE__ */ t(v.SlippageInput, { onSave: (o) => {
      r.onSave(o), d();
    }, value: r.value, options: r.options }) }),
    /* @__PURE__ */ c(y, { direction: "column", gap: "4", children: [
      /* @__PURE__ */ c(y, { w: "full", direction: "column", gap: "1", children: [
        /* @__PURE__ */ c(y, { pos: "relative", children: [
          /* @__PURE__ */ t(F, { amount: m.amount, token: {
            ...m.token,
            onClick: (o) => {
              var i;
              (i = m.token) == null || i.onClick(o), k();
            }
          }, isLoading: m.isLoading, children: /* @__PURE__ */ t(N.Default, { title: n("swap.pay") }) }),
          /* @__PURE__ */ t(G, { onClick: B })
        ] }),
        /* @__PURE__ */ t(F, { amount: s.amount, token: {
          ...s.token,
          onClick: (o) => {
            var i;
            (i = s.token) == null || i.onClick(o), k();
          }
        }, isLoading: s.isLoading, children: /* @__PURE__ */ t(N.Default, { title: n("swap.receive") }) })
      ] }),
      !e && u && /* @__PURE__ */ c(y, { bg: "surface-elevated", justifyContent: "space-between", alignItems: "center", p: "4", rounded: "lg", fontWeight: "500", children: [
        /* @__PURE__ */ t(J, { children: n("swap.findingTheBestRate") }),
        /* @__PURE__ */ t(O, {})
      ] }),
      $ && e && /* @__PURE__ */ t(D, { children: /* @__PURE__ */ t(D.Default, { header: {
        primary: {
          property: n("swap.bestPrice"),
          value: `1 ${e.payToken.symbol} = ${U} ${e.receiveToken.symbol}`
        },
        secondary: {
          property: n(u ? "swap.updatingQuote" : "swap.quoteUpToDate"),
          icon: u ? /* @__PURE__ */ t(O, { w: "2", h: "2" }) : void 0
        }
      }, items: j }) })
    ] }),
    h.show && /* @__PURE__ */ t(Q, { type: h.type, onClick: h.onClick, colorScheme: !u && f && ![P.NO_TOKEN, P.NO_AMOUNT].includes(f) ? "danger" : "primary", w: "full", isDisabled: M, children: n(u ? "swap.loading" : f || "swap.review") })
  ] });
}
export {
  fe as Swap
};
