import { tabsAnatomy as i } from "@chakra-ui/anatomy";
import { createMultiStyleConfigHelpers as s } from "@chakra-ui/react";
import { typographyStyles as o } from "./typographyStyles.generated.js";
import { pxToRem as r } from "../../utilities/pxToRem.js";
const { definePartsStyle: t, defineMultiStyleConfig: n } = s(i.keys), p = t({
  tabpanel: {
    p: 0
  }
}), l = {
  /** For sizes here, aim for consistency with `Button.tsx` and `SegmentedButton.tsx`  */
  "2xs": t({
    tab: {
      ...o.H5,
      pt: 0,
      pb: r(13),
      px: 0
    }
  }),
  md: t({
    tab: {
      ...o.H5,
      pt: 0,
      pb: r(13),
      px: 0
    }
  })
}, a = t(() => ({
  tab: {
    px: 3,
    position: "relative",
    color: "text-subtle",
    transitionDuration: 0,
    _hover: {
      "::after": {
        opacity: 0.5,
        transitionDuration: "fast"
      }
    },
    _selected: {
      color: "text-primary",
      bg: "transparent",
      "::after": {
        opacity: 1
      }
    },
    _after: {
      opacity: 0,
      content: '""',
      position: "absolute",
      left: 3,
      bottom: 0,
      right: 3,
      height: "3px",
      backgroundColor: "surface-brand",
      borderTopLeftRadius: "3px",
      borderTopRightRadius: "3px",
      transitionProperty: "opacity"
    }
  },
  tablist: {
    px: 3,
    borderBottom: "1px solid",
    borderColor: "stroke-subtle"
  }
})), b = t(() => {
  const e = a();
  return {
    tab: {
      ...e.tab,
      flex: 1,
      px: 1,
      _after: {
        ...e.tab._after,
        left: 1,
        right: 1
      }
    },
    tablist: {
      ...e.tablist,
      px: 5
    }
  };
}), f = {
  default: a,
  fill: b
}, m = n({
  baseStyle: p,
  variants: f,
  sizes: l,
  defaultProps: {
    size: "md",
    variant: "default"
  }
});
export {
  m as tabsTheme
};
