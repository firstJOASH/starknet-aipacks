import { useGetOptimizedImageUrl as a } from "../../features/providers/ImageOptimizationProvider.js";
import { useTheme as p } from "@chakra-ui/react";
import { defaultWidths as l } from "./defaults.js";
import { toPx as d } from "../../utilities/units/index.js";
const f = ({ url: t, getGetOptimizedImageUrlImpl: r, widths: e = l, format: i }) => e.flatMap((u) => {
  try {
    const o = d(u);
    if (!o)
      return [];
    const n = parseFloat(o);
    if (!n)
      return [];
    const m = r(t, {
      width: n,
      format: i
    });
    return m ? `url(${m})` : [];
  } catch {
  }
  return [];
}), O = (t, r) => {
  const e = p();
  if (!t || t != null && t.startsWith("data") || !e.breakpoints)
    return;
  const i = Object.values(e.breakpoints).sort();
  return f({
    url: t,
    getGetOptimizedImageUrlImpl: a,
    widths: i,
    format: r
  });
};
export {
  O as useOptimizedImageUrl
};
