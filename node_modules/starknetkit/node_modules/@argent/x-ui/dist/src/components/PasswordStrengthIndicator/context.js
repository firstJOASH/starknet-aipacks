import { zxcvbnOptions as a } from "@zxcvbn-ts/core";
import { createContext as d, useContext as c } from "react";
import { usePasswordStrength as p } from "../../hooks/usePasswordStrength.js";
const h = d(null);
function f() {
  const s = c(h);
  if (!s)
    throw new Error("PasswordStrengthIndicator.* has to be a child of PasswordStrengthIndicator component.");
  const { password: n, showAlways: i } = s, r = p(n, async () => {
    const [t, o] = await Promise.all([
      import("@zxcvbn-ts/language-common"),
      import("@zxcvbn-ts/language-en")
    ]), e = {
      dictionary: {
        ...t == null ? void 0 : t.dictionary,
        ...o == null ? void 0 : o.dictionary
      },
      useLevenshteinDistance: !0,
      graphs: t == null ? void 0 : t.adjacencyGraphs,
      translations: o == null ? void 0 : o.translations
    };
    a.setOptions(e);
  });
  return !n && !i ? null : (r == null ? void 0 : r.score) ?? 0;
}
export {
  h as default,
  f as usePasswordStrengthIndicatorContext
};
