import { jsxs as s, jsx as t } from "react/jsx-runtime";
import x from "../features/icons/ChevronRightSecondaryIcon.js";
import { chakra as l, forwardRef as h, Flex as e, Button as u } from "@chakra-ui/react";
import "./Typography.js";
import { H5 as f, P3 as C } from "./typography.generated.js";
const j = l(e, {
  baseStyle: {
    flexDirection: "column",
    p: 4,
    gap: 2
  }
}), k = l(e, {
  baseStyle: {
    h: 2
  }
}), z = l(f, {
  baseStyle: {
    mt: 4,
    color: "text-secondary",
    "&:first-of-type": {
      mt: 0
    }
  }
}), A = h(({ extendedDescription: r, leftIcon: n, rightIcon: i = /* @__PURE__ */ t(x, {}), disabled: c, color: a, colorScheme: o, children: d, ...p }, m) => /* @__PURE__ */ s(u, { h: "initial", rounded: "lg", flexDir: "column", p: 4, justifyContent: "flex-start", textAlign: "left", isDisabled: c, ref: m, color: a, colorScheme: o, ...p, children: [
  /* @__PURE__ */ s(e, { w: "100%", gap: 3, flex: "1", justifyContent: "flex-start", alignItems: "center", textAlign: "left", children: [
    n && /* @__PURE__ */ t(e, { fontSize: "xl", children: n }),
    /* @__PURE__ */ t(f, { overflow: "hidden", textOverflow: "ellipsis", children: d }),
    i && /* @__PURE__ */ t(e, { ml: "auto", fontSize: "base", color: a === void 0 && (o === void 0 || o === "default") ? "text-secondary" : void 0, children: i })
  ] }),
  r && /* @__PURE__ */ t(C, { pt: "3", mt: "4", borderTop: "1px", borderTopColor: "black", flex: "1", w: "100%", whiteSpace: "normal", color: "neutrals.300", fontWeight: "normal", children: r })
] }));
export {
  A as ButtonCell,
  j as CellStack,
  z as HeaderCell,
  k as SpacerCell
};
