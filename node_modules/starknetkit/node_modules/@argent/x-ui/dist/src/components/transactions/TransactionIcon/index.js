import { jsx as o } from "react/jsx-runtime";
import { useMemo as a } from "react";
import { DeclareContractIcon as s } from "./DeclareTransactionIcon.js";
import { NftTransactionIcon as e } from "./NftTransactionIcon.js";
import { SendTransactionIcon as u } from "./SendTransactionIcon.js";
import { SwapTransactionIcon as I } from "./SwapTransactionIcon.js";
import { UnknownDappIcon as l } from "./UnknownDappIcon.js";
import { VerifiedDappIcon as T } from "./VerifiedDappIcon.js";
import { getTransactionReviewWithType as U } from "../../../hooks/transactions/useTransactionReview.js";
const b = ({ transactionReview: n, nft: t, nftTransfers: f, isNftLoading: i, isDeclareContract: p, verifiedDapp: m, networkId: c }) => {
  const r = a(() => U(n), [n]);
  return p ? /* @__PURE__ */ o(s, {}) : (r == null ? void 0 : r.type) === "swap" ? /* @__PURE__ */ o(I, { networkId: c, transaction: r }) : (r == null ? void 0 : r.type) === "transfer" ? /* @__PURE__ */ o(u, { networkId: c, transaction: r }) : m ? /* @__PURE__ */ o(T, { iconUrl: m.iconUrl }) : t ? /* @__PURE__ */ o(e, { nft: t, nftTransfers: f, isNftLoading: i }) : /* @__PURE__ */ o(l, {});
};
export {
  b as TransactionIcon
};
