import { jsx as r, jsxs as u } from "react/jsx-runtime";
import { buttonHoverStyle as t, buttonBaseStyle as d } from "../features/theme/buttonTheme.js";
import { forwardRef as p, Flex as x, Center as f, Circle as a } from "@chakra-ui/react";
import { NavLink as m } from "react-router-dom";
const h = 16;
function C(o) {
  return /* @__PURE__ */ r(x, { top: "initial", bottom: 0, height: h, backgroundColor: "surface-default", borderTop: "1px solid", borderTopColor: "border", boxShadow: "menu", ...o });
}
function v(o) {
  return /* @__PURE__ */ r(a, { fontSize: "2xl", transitionProperty: "common", transitionDuration: "fast", color: "icon-subtle", boxShadow: d.boxShadow, _active: {
    color: "text-primary",
    boxShadow: t.boxShadow
  }, _groupHover: {
    color: "text-primary",
    boxShadow: t.boxShadow
  }, sx: {
    /** 'active' class from React Router Dom NavLink */
    ".active &": {
      color: "text-primary",
      backgroundColor: "button-secondary"
    }
  }, ...o });
}
function S(o) {
  return /* @__PURE__ */ r(a, { position: "absolute", left: "50%", top: "50%", backgroundColor: "surface-info-vibrant", transform: "translate(calc(var(--chakra-sizes-5)*-1),calc(var(--chakra-sizes-5)*-1))", ...o });
}
const k = p(({ icon: o, label: e, badgeLabel: n, badgeDescription: i, as: l = m, ...c }, b) => {
  const s = Number(n) > 0;
  return /* @__PURE__ */ u(f, { position: "relative", flex: 1, "aria-label": e, role: "group", as: l, ref: b, sx: {
    /** 'active' class from React Router Dom NavLink */
    "&.active": {
      pointerEvents: "none"
    }
  }, ...c, children: [
    s && /* @__PURE__ */ r(S, { "aria-label": i, size: 2 }),
    /* @__PURE__ */ r(v, { size: 10, children: o })
  ] });
});
export {
  C as TabBar,
  h as TabBarHeight,
  k as TabBarTab
};
