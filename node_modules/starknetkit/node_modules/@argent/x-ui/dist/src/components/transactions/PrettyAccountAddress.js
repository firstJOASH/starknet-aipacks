import { jsx as o, Fragment as a, jsxs as g } from "react/jsx-runtime";
import { isBase58Address as u, formatTruncatedSignerKey as c, formatTruncatedAddress as d } from "../../../node_modules/.pnpm/@argent_x-shared@1.73.0_@scure_base@1.2.4_@scure_bip39@1.5.4_async-retry@1.3.3_lodash-e_b34e798a09d95058b17e0b32da902dbd/node_modules/@argent/x-shared/dist/src/chains/starknet/address.js";
import { getNetworkAccountImageUrl as h } from "../../../node_modules/.pnpm/@argent_x-shared@1.73.0_@scure_base@1.2.4_@scure_bip39@1.5.4_async-retry@1.3.3_lodash-e_b34e798a09d95058b17e0b32da902dbd/node_modules/@argent/x-shared/dist/src/utils/avatarImage.js";
import { Flex as x } from "@chakra-ui/react";
import "../Typography.js";
import { TokenIcon as I } from "../TokenIcon.js";
import { P3 as y } from "../typography.generated.js";
const w = ({ accountAddress: r, networkId: i, accountName: t, size: f = 10, fallbackValue: m, icon: n = !0, bold: s = !1 }) => {
  const l = h({
    accountName: t || r,
    networkId: i,
    accountAddress: r
  }), p = u(r) ? c : d, e = t || (m ? m(r) : p(r));
  return e && !n ? /* @__PURE__ */ o(a, { children: e }) : /* @__PURE__ */ g(x, { alignItems: "center", gap: 2, children: [
    n && t && /* @__PURE__ */ o(I, { url: l, name: r, size: f, rounded: "full" }),
    s ? /* @__PURE__ */ o(y, { fontWeight: "bold", children: e }) : e
  ] });
};
export {
  w as PrettyAccountAddress
};
