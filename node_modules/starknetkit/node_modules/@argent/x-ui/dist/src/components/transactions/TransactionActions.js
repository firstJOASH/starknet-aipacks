import { jsxs as t, jsx as o, Fragment as x } from "react/jsx-runtime";
import { formatTruncatedAddress as s } from "../../../node_modules/.pnpm/@argent_x-shared@1.73.0_@scure_base@1.2.4_@scure_bip39@1.5.4_async-retry@1.3.3_lodash-e_b34e798a09d95058b17e0b32da902dbd/node_modules/@argent/x-shared/dist/src/chains/starknet/address.js";
import { entryPointToHumanReadable as C } from "../../../node_modules/.pnpm/@argent_x-shared@1.73.0_@scure_base@1.2.4_@scure_bip39@1.5.4_async-retry@1.3.3_lodash-e_b34e798a09d95058b17e0b32da902dbd/node_modules/@argent/x-shared/dist/src/utils/transactions.js";
import { useColorMode as A, Box as c, Accordion as k, AccordionItem as w, AccordionButton as T, AccordionPanel as W, Divider as v, Flex as b } from "@chakra-ui/react";
import { useMemo as D } from "react";
import { useTranslation as R } from "react-i18next";
import { CallData as _, num as B } from "starknet";
import { CopyTooltip as O } from "../CopyTooltip.js";
import { P3 as d } from "../typography.generated.js";
const K = ({ transactions: r, type: g = "INVOKE_FUNCTION" }) => {
  const { t: a } = R(), { colorMode: p } = A(), e = D(() => p === "dark", [p]);
  return /* @__PURE__ */ t(c, { borderRadius: "xl", w: "100%", children: [
    /* @__PURE__ */ o(c, { backgroundColor: e ? "neutrals.700" : "gray.50", px: "3", py: "2.5", borderTopRadius: "xl", children: /* @__PURE__ */ o(d, { fontWeight: "bold", color: e ? "neutrals.100" : "black", children: a("transactionActions.actions") }) }),
    /* @__PURE__ */ o(k, { allowToggle: !0, backgroundColor: e ? "neutrals.300" : "white", borderBottomRadius: "xl", children: r == null ? void 0 : r.map((l, n) => {
      var h;
      return /* @__PURE__ */ o(w, { border: "none", isDisabled: !l.calldata || ((h = l.calldata) == null ? void 0 : h.length) === 0, children: ({ isDisabled: f, isExpanded: y }) => {
        var m;
        return /* @__PURE__ */ t(x, { children: [
          /* @__PURE__ */ o("h2", { children: /* @__PURE__ */ t(
            T,
            {
              display: "flex",
              color: "text-primary",
              width: "100%",
              justifyContent: "space-between",
              outline: "none",
              px: "3",
              pb: n !== r.length - 1 ? "3" : "3.5",
              _expanded: {
                backgroundColor: e ? "neutrals.700" : "gray.50",
                pb: "3.5"
              },
              disabled: !l.calldata || ((m = l.calldata) == null ? void 0 : m.length) === 0,
              _disabled: {
                cursor: "auto",
                opacity: 1
              },
              _hover: {
                backgroundColor: f ? "" : e ? "neutrals.700" : "gray.50",
                borderBottomRadius: n === r.length - 1 && !y ? "xl" : "0"
              },
              children: [
                /* @__PURE__ */ o(d, { fontWeight: "bold", children: g === "DEPLOY_ACCOUNT" && r.length === 1 ? a("transactionActions.activateAccount") : C(l.entrypoint) }),
                /* @__PURE__ */ o(d, { fontWeight: "bold", children: s(l.contractAddress) })
              ]
            }
          ) }),
          /* @__PURE__ */ t(W, { backgroundColor: e ? "neutrals.700" : "gray.50", borderBottomRadius: n === r.length - 1 ? "xl" : "0", px: "3", pb: "0", children: [
            /* @__PURE__ */ o(v, { color: "black", opacity: "1" }),
            /* @__PURE__ */ o(b, { flexDirection: "column", gap: "12px", py: "3.5", children: _.toCalldata(l.calldata).map((i, u) => /* @__PURE__ */ t(b, { justifyContent: "space-between", gap: "2", children: [
              /* @__PURE__ */ t(d, { fontWeight: "bold", color: "text-primary", children: [
                a("transactionActions.calldata"),
                u + 1
              ] }),
              /* @__PURE__ */ o(O, { copyValue: i, prompt: i, children: /* @__PURE__ */ o(c, { _hover: {
                backgroundColor: e ? "neutrals.700" : "gray.50",
                color: "text-primary",
                cursor: "pointer"
              }, color: "text-primary", whiteSpace: "nowrap", textOverflow: "ellipsis", overflow: "hidden", minWidth: "0", children: /* @__PURE__ */ o(d, { fontWeight: "bold", maxWidth: "70%", children: B.isHex(i) ? s(i) : i }) }) })
            ] }, u)) })
          ] })
        ] });
      } }, n);
    }) })
  ] });
};
export {
  K as TransactionActions
};
