import { jsx as r, jsxs as y } from "react/jsx-runtime";
import { Tooltip as b, Box as u } from "@chakra-ui/react";
import { useState as O, useRef as m, useEffect as C } from "react";
import R from "react-copy-to-clipboard";
import { useTranslation as g } from "react-i18next";
import { useOnClickOutside as j } from "../hooks/useOnClickOutside.js";
const P = ({ copyValue: n, prompt: c, message: a, autoDismiss: s = !0, children: i, onClick: e, ...d }) => {
  const { t: p } = g(), T = p("copyTooltip.prompt"), x = p("copyTooltip.message"), [t, o] = O(!1), l = m(), f = m(null);
  return j(f, () => o(!1)), C(() => (s && t && (l.current = setTimeout(() => o(!1), 2500)), () => {
    clearTimeout(l.current);
  }), [s, t]), /* @__PURE__ */ r(b, { label: t ? a ?? x : c ?? T, isOpen: t || void 0, ...d, children: /* @__PURE__ */ y(u, { ref: f, children: [
    !e && /* @__PURE__ */ r(R, { text: n, onCopy: () => o(!0), children: i }),
    e && /* @__PURE__ */ r(u, { onClick: e, children: i })
  ] }) });
};
export {
  P as CopyTooltip
};
