import { jsx as e, jsxs as l } from "react/jsx-runtime";
import { AlertDialog as A, AlertDialogOverlay as x, AlertDialogContent as C, AlertDialogBody as k, VStack as w, AlertDialogFooter as y, Button as r } from "@chakra-ui/react";
import { isFunction as a } from "lodash-es";
import { useRef as S } from "react";
import "./Typography.js";
import { H4 as b, P3 as v } from "./typography.generated.js";
const H = ({ title: d, onDestroy: t, destroyTitle: s = "Delete", onCancel: i, cancelTitle: m = "Cancel", onConfirm: o, confirmTitle: h = "OK", message: c, children: p, cancelButtonTestId: f, destroyButtonTestId: u, confirmButtonTestId: g, ...D }) => {
  const n = S(null);
  return /* @__PURE__ */ e(A, { onClose: i, leastDestructiveRef: n, isCentered: !0, ...D, children: /* @__PURE__ */ e(x, { bg: "black.50", children: /* @__PURE__ */ l(C, { p: 5, color: "text-primary", bgColor: "surface-elevated", rounded: "2xl", w: 280, children: [
    /* @__PURE__ */ e(k, { p: 0, children: /* @__PURE__ */ l(w, { textAlign: "center", spacing: 2, children: [
      /* @__PURE__ */ e(b, { children: d }),
      c && /* @__PURE__ */ e(v, { children: c }),
      p
    ] }) }),
    /* @__PURE__ */ l(y, { flexDirection: "column", gap: 2, p: 0, mt: 6, children: [
      a(t) && /* @__PURE__ */ e(r, { "data-testid": u, colorScheme: "danger", size: "sm", w: "full", onClick: t, children: s }),
      a(o) && /* @__PURE__ */ e(r, { "data-testid": g, colorScheme: "primary", size: "sm", w: "full", onClick: o, children: h }),
      /* @__PURE__ */ e(r, { "data-testid": f, ref: n, colorScheme: "secondary", size: "sm", w: "full", onClick: i, children: m })
    ] })
  ] }) }) });
};
export {
  H as AlertDialog
};
