import { jsx as o, jsxs as s } from "react/jsx-runtime";
import { Accordion as u, AccordionItem as A, AccordionButton as b, Text as h, AccordionPanel as j } from "@chakra-ui/react";
import { isObjectLike as w, upperFirst as x, lowerCase as y, isObject as L, isArray as d, isEmpty as l } from "lodash-es";
import { LabelValueStack as k, LabelValueRow as I } from "./LabelValue.js";
import { AccordionIconDropdown as O } from "./Accordion.js";
const V = ({ json: e, initiallyExpanded: t, ...m }) => {
  if (!w(e))
    return null;
  const p = t ? 0 : void 0;
  return /* @__PURE__ */ o(k, { children: Object.entries(e).map(([c, r], a) => {
    const i = `${c}-${a}`, n = x(y(c));
    if ((L(r) || d(r)) && !l(r))
      return /* @__PURE__ */ o(u, { allowToggle: !0, defaultIndex: p, size: "sm", variant: "nested", ...m, children: /* @__PURE__ */ s(A, { children: [
        /* @__PURE__ */ s(b, { children: [
          /* @__PURE__ */ o(h, { mr: 1, children: n }),
          /* @__PURE__ */ o(O, {})
        ] }),
        /* @__PURE__ */ o(j, { children: /* @__PURE__ */ o(V, { json: r, initiallyExpanded: t }) })
      ] }) }, i);
    const f = d(r) && l(r) ? "â€“" : `${r}`;
    return /* @__PURE__ */ o(I, { label: n, value: f }, i);
  }) });
};
export {
  V as NestedAccordion
};
