import { jsx as x } from "react/jsx-runtime";
import p from "embla-carousel-react";
import { useContext as d, createContext as f } from "react";
import { useIndicatorButton as B } from "./useIndicatorButton.js";
import { usePrevNextButtons as b } from "./usePrevNextButtons.js";
import { WheelGesturesPlugin as g } from "embla-carousel-wheel-gestures";
const o = f(null), I = () => {
  const t = d(o);
  if (!t)
    throw new Error("useCarousel must be used within a <Carousel />");
  return t;
}, D = ({ options: t, plugins: r, ...n }) => {
  const [s, e] = p(t, r), { selectedIndex: u, scrollSnaps: l, onIndicatorButtonClick: i } = B(e), { prevBtnDisabled: a, nextBtnDisabled: c, onPrevButtonClick: m, onNextButtonClick: C } = b(e);
  return /* @__PURE__ */ x(o.Provider, { value: {
    emblaRef: s,
    emblaApi: e,
    selectedIndex: u,
    scrollSnaps: l,
    onIndicatorButtonClick: i,
    prevBtnDisabled: a,
    nextBtnDisabled: c,
    onPrevButtonClick: m,
    onNextButtonClick: C
  }, ...n });
};
export {
  D as Carousel,
  g as WheelGesturesPlugin,
  I as useCarousel
};
