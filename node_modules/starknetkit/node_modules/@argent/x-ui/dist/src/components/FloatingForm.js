import { jsxs as p, jsx as o } from "react/jsx-runtime";
import g from "../features/icons/CheckmarkSecondaryIcon.js";
import k from "../features/icons/MinusPrimaryIcon.js";
import x from "../features/icons/PlusSecondaryIcon.js";
import { useOutsideClick as C, Flex as h, chakra as y, Input as B, IconButton as F } from "@chakra-ui/react";
import { useRef as I } from "react";
import { useTranslation as z } from "react-i18next";
const i = y(F, {
  baseStyle: {
    backgroundColor: "neutrals.700",
    display: "flex",
    justifyContent: "center",
    alignItems: "center",
    minHeight: 8,
    minWidth: 8,
    padding: 2
  }
}), A = ({ onClose: c, onConfirm: l, onIncrease: a, onReduce: s, value: r, onChange: u, max: n, min: e }) => {
  const { t } = z(), d = I(null);
  C({
    ref: d,
    handler: c
  });
  const m = !!(r && e && r <= e), b = !!(r && n && r > n);
  return /* @__PURE__ */ p(h, { gap: "1", p: "2", bg: "black", border: "1px solid", borderColor: "neutrals.700", borderRadius: "full", boxShadow: "menu", position: "absolute", top: 0, transform: "translateY(-100%)", ref: d, children: [
    s && /* @__PURE__ */ o(i, { rounded: "full", size: "xs", "aria-label": t("floatingForm.decrease"), disabled: m, onClick: s, icon: /* @__PURE__ */ o(k, {}) }),
    /* @__PURE__ */ o(B, { min: e, max: n, value: r, size: "xs", minW: 20, borderRadius: "lg", type: "number", onChange: (f) => u(parseInt(f.target.value)) }),
    a && /* @__PURE__ */ o(i, { rounded: "full", size: "xs", backgroundColor: "neutrals.700", "aria-label": t("floatingForm.increase"), disabled: b, onClick: a, icon: /* @__PURE__ */ o(x, {}) }),
    l && /* @__PURE__ */ o(i, { rounded: "full", size: "xs", backgroundColor: "neutrals.700", "aria-label": t("floatingForm.confirm"), disabled: !r, onClick: l, icon: /* @__PURE__ */ o(g, {}) })
  ] });
};
export {
  A as FloatingForm
};
