import { jsxs as c, jsx as t } from "react/jsx-runtime";
import v from "../features/icons/ChevronDownSecondaryIcon.js";
import { Menu as w, MenuButton as L, InputGroup as M, Input as p, InputRightElement as C, Text as j, MenuList as y, MenuItem as h } from "@chakra-ui/react";
import { isString as B } from "lodash-es";
import { useMemo as f } from "react";
import "./Typography.js";
import { H5 as H } from "./typography.generated.js";
const W = ({ emptyMessage: m, isDisabled: a, isInvalid: b, label: i, maxH: g, name: s, onChange: x, options: r, placeholder: d, value: l }) => {
  const I = f(() => {
    const e = r.find((n) => n.value === l);
    if (e && B(e.label))
      return e.label;
  }, [r, l]), S = f(() => {
    const e = r.find((n) => n.value === l);
    return (e == null ? void 0 : e.labelSelected) ?? (e == null ? void 0 : e.label);
  }, [r, l]), o = !!i;
  return /* @__PURE__ */ c(w, { matchWidth: !0, gutter: 0, children: [
    /* @__PURE__ */ t(L, { "aria-label": d, w: "100%", type: "button", disabled: a, children: /* @__PURE__ */ c(M, { children: [
      /* @__PURE__ */ t(p, { isInvalid: b, variant: "filled", isDisabled: a, value: o ? i : I, placeholder: d, name: s }),
      /* @__PURE__ */ c(C, { w: "auto", gap: 2, mr: "3", display: "flex", alignItems: "center", zIndex: 0, color: a ? "neutrals.600" : "neutrals.200", children: [
        o && /* @__PURE__ */ t(H, { children: S ?? d }),
        /* @__PURE__ */ t(j, { children: /* @__PURE__ */ t(v, {}) })
      ] })
    ] }) }),
    /* @__PURE__ */ c(y, { overflow: "auto", maxH: g || "100%", children: [
      r.map(({ icon: e, label: n, value: u }) => /* @__PURE__ */ t(h, { icon: e, onClick: () => x(u), bgColor: u === l ? "neutrals.600" : void 0, "data-group": !0, children: n }, u)),
      m && (r == null ? void 0 : r.length) < 1 && /* @__PURE__ */ t(h, { disabled: !0, children: m })
    ] })
  ] });
};
export {
  W as Select
};
