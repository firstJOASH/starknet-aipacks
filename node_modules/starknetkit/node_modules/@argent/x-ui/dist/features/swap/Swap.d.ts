import { Trade } from '@argent/x-shared/swap';
import { MouseEvent } from 'react';
import { CompoundInputProps, TokenRowItem } from '../../components';
import { SelectAssetProps } from '../../components/CompoundDialogBottomSheet/components/SelectAsset';
import { SlippageInputProps } from '../../components/CompoundDialogBottomSheet/components/SlippageInput';
import { SwapInputError } from './types';
interface SwapField {
    amount: CompoundInputProps["amount"];
    token: CompoundInputProps["token"];
    isLoading: boolean;
}
interface SwapAssetSelect<T extends TokenRowItem> extends SelectAssetProps<T> {
    bottomSheetTopMargin?: number;
}
interface SwapProps<T extends TokenRowItem> {
    assetSelect: SwapAssetSelect<T>;
    slippage: SlippageInputProps;
    pay: SwapField;
    receive: SwapField;
    onSwitchTokens: () => void;
    isDisabled: boolean;
    showDetails: boolean;
    error: SwapInputError | undefined;
    isLoadingTrade: boolean;
    trade: Trade | null | undefined;
    submitButton: {
        show: boolean;
        type?: "submit" | "button";
        onClick?: (e: MouseEvent<HTMLButtonElement>) => void;
    };
}
declare function Swap<T extends TokenRowItem>({ assetSelect, slippage, pay, receive, onSwitchTokens, error, isDisabled, showDetails, trade, isLoadingTrade, submitButton, }: SwapProps<T>): import("react").JSX.Element;
export { Swap };
export type { SwapProps };
