import { FC, PropsWithChildren } from 'react';
export type OnOpenAddress = ({ address, networkId, }: {
    address: string;
    networkId: string;
}) => void | Promise<void>;
export type OnOpenTransaction = ({ hash, networkId, }: {
    hash: string;
    networkId: string;
}) => void | Promise<void>;
export type UseBlockExplorer = () => {
    title: string;
    onOpenAddress: OnOpenAddress;
    onOpenTransaction: OnOpenTransaction;
};
interface BlockExplorerContextProps {
    useBlockExplorer: UseBlockExplorer;
}
export declare const useBlockExplorer: () => {
    title: string;
    onOpenAddress: OnOpenAddress;
    onOpenTransaction: OnOpenTransaction;
};
export declare const useBlockExplorerTitle: () => string;
export declare const useBlockExplorerOnOpenAddress: () => OnOpenAddress;
export declare const useBlockExplorerOnOpenTransaction: () => OnOpenTransaction;
export interface BlockExplorerProviderProps extends PropsWithChildren, BlockExplorerContextProps {
}
export declare const BlockExplorerProvider: FC<BlockExplorerProviderProps>;
export {};
