import { BareFetcher, Key, SWRConfiguration } from 'swr';
export interface SWRConfigCommon {
    suspense?: boolean;
    refreshInterval?: number;
    errorRetryInterval?: number;
}
export declare const withPolling: (interval: number) => {
    refreshInterval: number;
    dedupingInterval: number; /** dedupe multiple requests */
};
export declare const getAccountIdentifier: (account: {
    networkId: string;
    address: string;
}) => string;
/**
 * `useSWR` with additional flag that will enable or disable calling the fetcher and clears data when disabled
 *
 * This is useful when data fetching may be dependent on a user setting
 */
export declare function useConditionallyEnabledSWR<Data = any, Error = any>(enabled: boolean, key: Key, fetcher: BareFetcher<Data> | null, config?: SWRConfiguration<Data, Error, BareFetcher<Data>>): import('swr').SWRResponse<Data, Error>;
export declare const swrRefetchDisabledConfig: SWRConfiguration;
