const n = /* @__PURE__ */ BigInt(4294967295), s = /* @__PURE__ */ BigInt(32);
function u(r, l = !1) {
  return l ? { h: Number(r & n), l: Number(r >> s & n) } : { h: Number(r >> s & n) | 0, l: Number(r & n) | 0 };
}
function f(r, l = !1) {
  let e = new Uint32Array(r.length), o = new Uint32Array(r.length);
  for (let t = 0; t < r.length; t++) {
    const { h: a, l: i } = u(r[t], l);
    [e[t], o[t]] = [a, i];
  }
  return [e, o];
}
const g = (r, l, e) => r << e | l >>> 32 - e, h = (r, l, e) => l << e | r >>> 32 - e, c = (r, l, e) => l << e - 32 | r >>> 64 - e, m = (r, l, e) => r << e - 32 | l >>> 64 - e;
export {
  u as fromBig,
  c as rotlBH,
  m as rotlBL,
  g as rotlSH,
  h as rotlSL,
  f as split
};
