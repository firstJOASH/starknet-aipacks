interface SegmentedRowList<T> {
    title: string;
    rows: T[];
}
interface RowListProps<T extends object> {
    rows: T[] | SegmentedRowList<T>[];
    RowComponent: React.ComponentType<T>;
    NoResultsComponent?: React.ComponentType;
    loading?: boolean;
    allowSearch?: boolean;
    searchRows?: (searchValue: string, rows: T[]) => T[];
}
declare function RowList<T extends object>({ rows, RowComponent, NoResultsComponent, loading, allowSearch, searchRows, }: RowListProps<T>): import("react").JSX.Element;
export type { RowListProps, SegmentedRowList };
export { RowList };
