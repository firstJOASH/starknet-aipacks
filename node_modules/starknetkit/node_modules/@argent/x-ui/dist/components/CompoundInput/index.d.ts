import { PropsWithChildren } from 'react';
import { CompoundInputContextProps } from './context';
type CompoundInputProps = PropsWithChildren & CompoundInputContextProps;
declare function CompoundInput({ children, ...props }: CompoundInputProps): import("react").JSX.Element;
declare namespace CompoundInput {
    var Container: typeof import("@/components/CompoundInput/components").Container;
    var InputAmount: typeof import("@/components/CompoundInput/components").InputAmount;
    var InputToken: typeof import("@/components/CompoundInput/components").InputToken;
    var PercentageButton: typeof import("@/components/CompoundInput/components").PercentageButton;
    var ConversionValue: typeof import("@/components/CompoundInput/components").ConversionValue;
    var TokenBalance: typeof import("@/components/CompoundInput/components").TokenBalance;
    var SwitchButton: typeof import("@/components/CompoundInput/components").SwitchButton;
    var PriceImpact: typeof import("@/components/CompoundInput/components").PriceImpact;
}
export type { CompoundInputProps };
export { CompoundInput };
export declare const usePriceImpactConfig: () => {
    low: {
        bgColor: string;
        textColor: string;
        text: string;
    };
    high: {
        bgColor: string;
        textColor: string;
        text: string;
    };
    extreme: {
        bgColor: string;
        textColor: string;
        text: string;
    };
};
