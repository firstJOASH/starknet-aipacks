import { ApiTransactionReview, ApiTransactionReviewActivity, ApiTransactionReviewActivityType, ApiTransactionReviewResponse, IUseTransactionReview, TransactionReviewWithType } from '@argent/x-shared';
export declare const useTransactionReview: ({ apiData: { apiBaseUrl, apiHeaders }, address, network, transactionReviewEnabled, transactions, }: IUseTransactionReview) => import('swr').SWRResponse<ApiTransactionReviewResponse, any>;
export declare const getDisplayWarnAndReasonForTransactionReview: (transactionReview?: Pick<ApiTransactionReviewResponse, "assessment" | "reason">) => {
    warn?: undefined;
    reason?: undefined;
} | {
    warn: boolean;
    reason: string | undefined;
};
/** finds activity of type 'swap */
export declare const getTransactionReviewSwap: (transactionReview?: ApiTransactionReviewResponse) => ApiTransactionReview | undefined;
export declare const getNFTTransferActivity: (transactionReview?: ApiTransactionReviewResponse) => void;
export declare const getTransactionReviewActivityOfType: (type: ApiTransactionReviewActivityType, transactionReview?: ApiTransactionReviewResponse) => ApiTransactionReviewActivity | undefined;
export declare const getTransactionReviewHasSwap: (transactionReview?: ApiTransactionReviewResponse) => boolean;
export declare const getTransactionReviewWithType: (transactionReview?: ApiTransactionReviewResponse) => TransactionReviewWithType | undefined;
