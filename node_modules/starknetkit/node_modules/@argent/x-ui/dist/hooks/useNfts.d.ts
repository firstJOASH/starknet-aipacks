import { Address, ArgentBackendNetworkId, BackendNftService, PaginatedItems } from '@argent/x-shared';
import { SWRConfigCommon } from '../http';
export declare const useNfts: (nftService: BackendNftService, chain: string, network: ArgentBackendNetworkId, address?: Address, config?: SWRConfigCommon) => {
    error?: any;
    mutate: import('swr').KeyedMutator<PaginatedItems | undefined>;
    isValidating: boolean;
    nfts: import('@argent/x-shared').NftItem[] | undefined;
};
export declare const useCollection: (nftService: BackendNftService, chain: string, network: ArgentBackendNetworkId, collectionAddress?: Address, config?: SWRConfigCommon) => {
    error?: any;
    mutate: import('swr').KeyedMutator<import('@argent/x-shared').Collection | undefined>;
    isValidating: boolean;
    collection: import('@argent/x-shared').Collection | undefined;
};
export declare const useNft: (nftService: BackendNftService, chain: string, network: ArgentBackendNetworkId, collectionAddress?: Address, tokenId?: string, config?: SWRConfigCommon) => {
    error?: any;
    mutate: import('swr').KeyedMutator<import('@argent/x-shared').NftItem | undefined>;
    isValidating: boolean;
    nft: import('@argent/x-shared').NftItem | undefined;
};
