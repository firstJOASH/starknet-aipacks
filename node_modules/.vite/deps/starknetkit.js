import {
  C,
  Fe,
  Pe,
  Q,
  Re,
  S,
  bl,
  i,
  i2,
  main,
  qe,
  wl
} from "./chunk-D75SMKNC.js";
import {
  ControllerConnector
} from "./chunk-5TUZOGMA.js";
import "./chunk-ZPSZN4RP.js";
import {
  L
} from "./chunk-M5AHGLAF.js";
import {
  fn
} from "./chunk-JPG53TQT.js";
import {
  a,
  s
} from "./chunk-OCOZLJAH.js";
import {
  M
} from "./chunk-IZCIPCCQ.js";
import "./chunk-ALJOHPWU.js";
import "./chunk-5N7ZOTW6.js";

// node_modules/starknetkit/dist/braavosMobile.js
var o = Object.defineProperty;
var l = (r, e, t4) => e in r ? o(r, e, { enumerable: true, configurable: true, writable: true, value: t4 }) : r[e] = t4;
var n = (r, e, t4) => (l(r, typeof e != "symbol" ? e + "" : e, t4), t4);
var i3 = `<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" width="32px" height="32px" viewBox="0 0 32 32" version="1.1">
    <defs>
    <clipPath id="clip1">
      <path d="M 5.332031 0 L 26.667969 0 C 29.613281 0 32 2.386719 32 5.332031 L 32 26.667969 C 32 29.613281 29.613281 32 26.667969 32 L 5.332031 32 C 2.386719 32 0 29.613281 0 26.667969 L 0 5.332031 C 0 2.386719 2.386719 0 5.332031 0 Z M 5.332031 0 "/>
    </clipPath>
    <linearGradient id="linear0" gradientUnits="userSpaceOnUse" x1="-9.552" y1="-6.444" x2="50.240002" y2="41.303001" gradientTransform="matrix(0.666667,0,0,0.666667,0,0)">
      <stop offset="0" style="stop-color:rgb(3.529412%,45.09804%,75.294119%);stop-opacity:1;"/>
      <stop offset="1" style="stop-color:rgb(10.980392%,28.627452%,87.058824%);stop-opacity:1;"/>
    </linearGradient>
    <clipPath id="clip2">
      <path d="M 7 4 L 25 4 L 25 15 L 7 15 Z M 7 4 "/>
    </clipPath>
    <clipPath id="clip3">
      <path d="M 5.332031 0 L 26.667969 0 C 29.613281 0 32 2.386719 32 5.332031 L 32 26.667969 C 32 29.613281 29.613281 32 26.667969 32 L 5.332031 32 C 2.386719 32 0 29.613281 0 26.667969 L 0 5.332031 C 0 2.386719 2.386719 0 5.332031 0 Z M 5.332031 0 "/>
    </clipPath>
    <clipPath id="clip4">
    	<path d="M 6 13 L 26 13 L 26 28 L 6 28 Z M 6 13 "/>
    </clipPath>
    <clipPath id="clip5">
      <path d="M 5.332031 0 L 26.667969 0 C 29.613281 0 32 2.386719 32 5.332031 L 32 26.667969 C 32 29.613281 29.613281 32 26.667969 32 L 5.332031 32 C 2.386719 32 0 29.613281 0 26.667969 L 0 5.332031 C 0 2.386719 2.386719 0 5.332031 0 Z M 5.332031 0 "/>
    </clipPath>
    </defs>
    <g id="surface1">
      <g clip-path="url(#clip1)" clip-rule="nonzero">
        <rect x="0" y="0" width="32" height="32" style="fill:url(#linear0);stroke:none;"/>
      </g>
    	<g clip-path="url(#clip2)" clip-rule="nonzero">
        <g clip-path="url(#clip3)" clip-rule="nonzero">
	        <path style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;" d="M 19.507812 6.320312 C 19.542969 6.378906 19.496094 6.453125 19.425781 6.453125 C 18.027344 6.453125 16.886719 7.5625 16.859375 8.941406 C 16.375 8.851562 15.878906 8.847656 15.390625 8.929688 C 15.359375 7.554688 14.222656 6.453125 12.824219 6.453125 C 12.757812 6.453125 12.710938 6.378906 12.746094 6.320312 C 13.453125 5.128906 14.738281 4.398438 16.125 4.398438 C 17.515625 4.394531 18.800781 5.125 19.507812 6.320312 M 23.65625 14.847656 C 24.132812 14.992188 24.585938 14.574219 24.402344 14.109375 C 23.066406 10.65625 19.109375 9.242188 16.105469 9.242188 C 13.097656 9.242188 9.054688 10.703125 7.804688 14.128906 C 7.632812 14.589844 8.082031 14.996094 8.550781 14.851562 L 15.75 12.648438 C 15.957031 12.582031 16.179688 12.582031 16.386719 12.644531 Z M 23.65625 14.847656 "/>
        </g>
    	</g>
    	<g clip-path="url(#clip4)" clip-rule="nonzero">
        <g clip-path="url(#clip5)" clip-rule="nonzero">
          <path style=" stroke:none;fill-rule:nonzero;fill:rgb(100%,100%,100%);fill-opacity:1;" d="M 7.734375 15.511719 L 15.757812 13.078125 C 15.964844 13.015625 16.183594 13.015625 16.390625 13.078125 L 24.464844 15.511719 C 25.136719 15.714844 25.597656 16.335938 25.597656 17.042969 L 25.597656 24.378906 C 25.566406 26.167969 23.960938 27.605469 22.167969 27.605469 L 19.195312 27.605469 C 19.054688 27.605469 18.917969 27.550781 18.820312 27.449219 C 18.71875 27.347656 18.664062 27.214844 18.664062 27.074219 L 18.664062 24.5 C 18.664062 23.488281 19.261719 22.570312 20.191406 22.164062 C 21.433594 21.621094 22.90625 20.886719 23.183594 19.410156 C 23.269531 18.933594 22.960938 18.472656 22.484375 18.378906 C 21.285156 18.140625 19.953125 18.230469 18.824219 18.734375 C 17.546875 19.308594 17.210938 20.257812 17.085938 21.539062 L 16.9375 22.914062 C 16.890625 23.335938 16.496094 23.65625 16.074219 23.65625 C 15.636719 23.65625 15.308594 23.324219 15.261719 22.886719 L 15.113281 21.539062 C 15.007812 20.441406 14.8125 19.378906 13.683594 18.875 C 12.390625 18.296875 11.09375 18.105469 9.714844 18.378906 C 9.238281 18.472656 8.929688 18.933594 9.015625 19.410156 C 9.296875 20.898438 10.757812 21.617188 12.007812 22.164062 C 12.9375 22.570312 13.535156 23.488281 13.535156 24.5 L 13.535156 27.074219 C 13.535156 27.367188 13.296875 27.605469 13.003906 27.605469 L 10.03125 27.605469 C 8.238281 27.605469 6.628906 26.167969 6.597656 24.378906 L 6.597656 17.039062 C 6.597656 16.335938 7.058594 15.714844 7.734375 15.511719 "/>
        </g>
    	</g>
    </g>
</svg>
`;
var c = class extends M {
  constructor() {
    super();
    n(this, "_wallet", null);
  }
  available() {
    return true;
  }
  async ready() {
    return true;
  }
  get id() {
    return "braavosMobile";
  }
  get name() {
    return "Braavos (mobile)";
  }
  get icon() {
    return {
      dark: i3,
      light: i3
    };
  }
  get wallet() {
    throw new Error("not implemented");
  }
  async connect(t4 = {}) {
    return await this.ensureWallet(), {
      account: "",
      chainId: BigInt(0)
    };
  }
  async disconnect() {
    throw new Error("not implemented");
  }
  async account(t4) {
    throw new Error("not implemented");
  }
  async chainId() {
    throw new Error("not implemented");
  }
  async request(t4) {
    throw new Error("not implemented");
  }
  // needed, methods required by starknet-react. Otherwise an exception is throwd
  async initEventListener(t4) {
    throw new Error("not implemented");
  }
  // needed, methods required by starknet-react. Otherwise an exception is throwd
  async removeEventListener(t4) {
    throw new Error("not implemented");
  }
  async ensureWallet() {
    window.open(`https://link.braavos.app/dapp/${window.origin}`, "_blank");
  }
};

// node_modules/starknetkit/dist/fordefi.js
var t = "fordefi";
var d = class extends L {
  constructor(e) {
    super({ options: { id: t, ...e } });
  }
  static getInjectedWallet() {
    return super.getInjectedWallet(t);
  }
  static isWalletInjected() {
    return super.isWalletInjected(t);
  }
};

// node_modules/starknetkit/dist/keplr.js
var t2 = "keplr";
var p = class extends L {
  constructor(e) {
    super({ options: { id: t2, ...e } });
  }
  static getInjectedWallet() {
    return super.getInjectedWallet(t2);
  }
  static isWalletInjected() {
    return super.isWalletInjected(t2);
  }
};

// node_modules/starknetkit/dist/metamask.js
var t3 = "metamask";
var i4 = class extends L {
  constructor(e) {
    super({ options: { id: t3, ...e } });
  }
  static getInjectedWallet() {
    return super.getInjectedWallet(t3);
  }
  static isWalletInjected() {
    return super.isWalletInjected(t3);
  }
};

// node_modules/starknetkit/dist/starknetkit.js
var q = () => {
  const a2 = navigator.userAgent.toLowerCase(), s2 = /android|webos|iphone|ipad|ipod|blackberry|windows phone/.test(a2), o2 = "ontouchstart" in window || navigator.maxTouchPoints > 0, m = window.innerWidth <= 768;
  return s2 && (o2 || m);
};
var P = () => typeof window < "u" ? /^((?!chrome|android).)*safari/i.test(navigator.userAgent) : false;
var K = ({
  argentMobileOptions: a2,
  webWalletUrl: s2
}) => {
  const o2 = (
    // | StarknetkitCompoundConnector
    []
  );
  return o2.push(new i()), P() || (o2.push(new i2()), i4.isWalletInjected() && o2.push(new i4()), d.isWalletInjected() && o2.push(new d()), p.isWalletInjected() && o2.push(new p())), o2.push(new ControllerConnector()), q() && o2.push(new c()), o2;
};
var it = (a2) => ({
  starknetkitConnectModal: async () => await V({
    ...a2,
    skipEmit: true,
    resultType: void 0
  })
});
var n2 = null;
var V = async ({
  modalMode: a2 = "canAsk",
  storeVersion: s2 = Pe(),
  modalTheme: o2,
  dappName: m,
  resultType: p2 = "wallet",
  skipEmit: b = false,
  ...i5
}) => {
  const { webWalletUrl: M2 = fn, argentMobileOptions: v } = i5, { connectors: c2 } = i5;
  n2 = null;
  const d2 = !c2 || c2.length === 0 ? K({
    argentMobileOptions: v,
    webWalletUrl: M2
  }) : c2;
  b && (d2 == null ? void 0 : d2.map((t4) => {
    C(t4) && "connector" in t4 && "_options" in t4.connector && (t4.connector._options.shouldEmit = false);
  }));
  const f = localStorage.getItem("starknetLastConnectedWallet");
  if (a2 === "neverAsk")
    try {
      const t4 = Fe(d2, f);
      let u = null;
      return t4 && p2 === "wallet" && (u = await t4.connect({
        onlyQRCode: true
      })), {
        connector: t4,
        wallet: (t4 == null ? void 0 : t4.wallet) ?? null,
        connectorData: u
      };
    } catch (t4) {
      throw s(), new Error(t4);
    }
  const g = await main.getAvailableWallets(i5);
  if (a2 === "canAsk" && f && ((await main.getAuthorizedWallets(i5)).find((e) => e.id === f) ?? g.length === 1 ? g[0] : void 0)) {
    const e = Fe(d2, f);
    let r = null;
    return p2 === "wallet" && (r = await (e == null ? void 0 : e.connect({
      onlyQRCode: true
    })) ?? null), e && (n2 = e), {
      connector: n2,
      connectorData: r,
      wallet: (e == null ? void 0 : e.wallet) ?? null
    };
  }
  const L2 = (await main.getDiscoveryWallets(i5)).map(
    (t4) => t4.id.toLowerCase() === "argentx" ? {
      ...t4,
      name: "Ready Wallet (formerly Argent)"
    } : t4
  ), S2 = qe({
    availableConnectors: d2,
    installedWallets: g,
    discoveryWallets: L2,
    storeVersion: s2,
    customOrder: c2 ? (c2 == null ? void 0 : c2.length) > 0 : false
  });
  return new Promise((t4, u) => {
    const e = new wl({
      target: bl(),
      props: {
        dappName: m,
        callback: async (r, D = false) => {
          try {
            if (!r)
              throw new Error("Connector error");
            if (e.$set({ selectedWallet: r }), !r.installed) {
              e.$set({ layout: Q.download });
              return;
            }
            if (n2 = S(
              r.connector,
              D
            ), p2 === "wallet") {
              n2 instanceof Re ? e.$set({ layout: Q.qrCode }) : e.$set({ layout: Q.connecting });
              const C2 = await (n2 == null ? void 0 : n2.connect({
                onlyQRCode: true
              })) ?? null;
              n2 !== null && a(n2.id), t4({
                connector: n2,
                connectorData: C2,
                wallet: (n2 == null ? void 0 : n2.wallet) ?? null
              }), e.$set({ layout: Q.success }), setTimeout(() => e.$destroy(), 500);
            } else
              t4({
                connector: n2,
                wallet: null,
                connectorData: null
              }), e.$destroy();
          } catch (C2) {
            [Q.connecting, Q.qrCode].includes(e.getLayout()) ? e.$set({ layout: Q.loginFailure }) : u(C2);
          }
        },
        theme: o2 === "system" ? null : o2 ?? null,
        modalWallets: S2
      }
    });
  });
};
var ct = () => n2 ? n2.wallet : null;
var ut = async (a2 = {}) => (s(), n2 && await n2.disconnect(), n2 = null, main.disconnect(a2));
export {
  V as connect,
  ut as disconnect,
  ct as getSelectedConnectorWallet,
  it as useStarknetkitConnectModal
};
//# sourceMappingURL=starknetkit.js.map
